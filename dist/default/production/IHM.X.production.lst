

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu May 06 16:49:10 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_dispLCD
   712                           	FNCALL	_main,_dispLCD_init
   713                           	FNCALL	_main,_teclado_init
   714                           	FNCALL	_main,_teclado_scan
   715                           	FNCALL	_dispLCD_init,_dispLCD_instReg
   716                           	FNCALL	_dispLCD,_dispLCD_dataReg
   717                           	FNCALL	_dispLCD,_dispLCD_lincol
   718                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
   719                           	FNROOT	_main
   720                           	global	main@F1287
   721                           	global	_tabela
   722                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   723                           global __pidataBANK0
   724                           __pidataBANK0:
   725  0615                     	file	"main.c"
   726                           	line	16
   727                           
   728                           ;initializer for main@F1287
   729                           	retlw	054h
   730  0615  3454               	retlw	065h
   731  0616  3465               	retlw	063h
   732  0617  3463               	retlw	06Ch
   733  0618  346C               	retlw	061h
   734  0619  3461               	retlw	03Ah
   735  061A  343A               	retlw	020h
   736  061B  3420               	retlw	020h
   737  061C  3420               	retlw	020h
   738  061D  3420               	retlw	020h
   739  061E  3420               	retlw	020h
   740  061F  3420               	retlw	020h
   741  0620  3420               	retlw	020h
   742  0621  3420               	retlw	020h
   743  0622  3420               	retlw	low(0)
   744  0623  3400               	file	"teclado.c"
   745                           	line	30
   746                           
   747                           ;initializer for _tabela
   748                           	retlw	031h
   749  0624  3431               	retlw	032h
   750  0625  3432               	retlw	033h
   751  0626  3433               	retlw	041h
   752  0627  3441               	retlw	034h
   753  0628  3434               	retlw	035h
   754  0629  3435               	retlw	036h
   755  062A  3436               	retlw	042h
   756  062B  3442               	global	_PORTB
   757                           _PORTB	set	0x6
   758  0006                     	global	_LCDbits
   759                           _LCDbits	set	8
   760  0008                     	global	_TRISB
   761                           _TRISB	set	0x86
   762  0086                     	global	_TRISDbits
   763                           _TRISDbits	set	0x88
   764  0088                     	global	_ANSELH
   765                           _ANSELH	set	0x189
   766  0189                     psect	strings,class=STRING,delta=2,noexec
   767                           global __pstrings
   768                           __pstrings:
   769  0003                     stringtab:
   770  0003                     	global    __stringtab
   771                           __stringtab:
   772  0003                     ;	String table - string pointers are 1 byte each
   773                           	btfsc	(btemp+1),7
   774  0003  1BFF               	ljmp	stringcode
   775  0004  280D               	bcf	status,7
   776  0005  1383               	btfsc	(btemp+1),0
   777  0006  187F               	bsf	status,7
   778  0007  1783               	movf	indf,w
   779  0008  0800               	incf fsr
   780  0009  0A84               skipnz
   781  000A  1903               incf btemp+1
   782  000B  0AFF               	return
   783  000C  0008               stringcode:stringdir:
   784  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
   785  000D  3000               movwf pclath
   786  000E  008A               movf fsr,w
   787  000F  0804               incf fsr
   788  0010  0A84               	addwf pc
   789  0011  0782               	global __stringbase
   790                           __stringbase:
   791  0012                     	retlw	0
   792  0012  3400               psect	strings
   793                           	global    __end_of__stringtab
   794                           __end_of__stringtab:
   795  0013                     	
   796                           STR_1:	
   797  0013                     	retlw	84	;'T'
   798  0013  3454               	retlw	101	;'e'
   799  0014  3465               	retlw	114	;'r'
   800  0015  3472               	retlw	116	;'t'
   801  0016  3474               	retlw	111	;'o'
   802  0017  346F               	retlw	115	;'s'
   803  0018  3473               	retlw	32	;' '
   804  0019  3420               	retlw	112	;'p'
   805  001A  3470               	retlw	114	;'r'
   806  001B  3472               	retlw	111	;'o'
   807  001C  346F               	retlw	106	;'j'
   808  001D  346A               	retlw	101	;'e'
   809  001E  3465               	retlw	99	;'c'
   810  001F  3463               	retlw	116	;'t'
   811  0020  3474               	retlw	0
   812  0021  3400               psect	strings
   813                           ; #config settings
   814                           global __CFG_FOSC$INTRC_NOCLKOUT
   815                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   816  0000                     global __CFG_WDTE$OFF
   817                           __CFG_WDTE$OFF equ 0x0
   818  0000                     global __CFG_PWRTE$OFF
   819                           __CFG_PWRTE$OFF equ 0x0
   820  0000                     global __CFG_MCLRE$OFF
   821                           __CFG_MCLRE$OFF equ 0x0
   822  0000                     global __CFG_CP$OFF
   823                           __CFG_CP$OFF equ 0x0
   824  0000                     global __CFG_CPD$OFF
   825                           __CFG_CPD$OFF equ 0x0
   826  0000                     global __CFG_BOREN$OFF
   827                           __CFG_BOREN$OFF equ 0x0
   828  0000                     global __CFG_IESO$OFF
   829                           __CFG_IESO$OFF equ 0x0
   830  0000                     global __CFG_FCMEN$OFF
   831                           __CFG_FCMEN$OFF equ 0x0
   832  0000                     global __CFG_LVP$OFF
   833                           __CFG_LVP$OFF equ 0x0
   834  0000                     global __CFG_BOR4V$BOR40V
   835                           __CFG_BOR4V$BOR40V equ 0x0
   836  0000                     global __CFG_WRT$OFF
   837                           __CFG_WRT$OFF equ 0x0
   838  0000                     	file	"C:\Users\20185087\AppData\Local\Temp\s6qs."
   839                           	line	#
   840                           psect cinit,class=CODE,delta=2
   841                           global start_initialization
   842                           start_initialization:
   843  07EE                     
   844                           global __initialization
   845                           __initialization:
   846  07EE                     psect	dataBANK0,class=BANK0,space=1,noexec
   847                           global __pdataBANK0
   848                           __pdataBANK0:
   849  0020                     	file	"main.c"
   850                           	line	16
   851                           main@F1287:
   852  0020                            ds      15
   853  0020                     
   854                           psect	dataBANK0
   855                           	file	"teclado.c"
   856                           	line	30
   857                           _tabela:
   858  002F                            ds      8
   859  002F                     
   860                           	file	"C:\Users\20185087\AppData\Local\Temp\s6qs."
   861                           	line	#
   862                           global btemp
   863                           psect inittext,class=CODE,delta=2
   864                           global init_fetch0,btemp
   865                           ;	Called with low address in FSR and high address in W
   866                           init_fetch0:
   867  0602                     	movf btemp,w
   868  0602  087E               	movwf pclath
   869  0603  008A               	movf btemp+1,w
   870  0604  087F               	movwf pc
   871  0605  0082               global init_ram0
   872                           ;Called with:
   873                           ;	high address of idata address in btemp 
   874                           ;	low address of idata address in btemp+1 
   875                           ;	low address of data in FSR
   876                           ;	high address + 1 of data in btemp-1
   877                           init_ram0:
   878  0606                     	fcall init_fetch0
   879  0606  120A  118A  2602  120A  118A  	movwf indf,f
   880  060B  0080               	incf fsr,f
   881  060C  0A84               	movf fsr,w
   882  060D  0804               	xorwf btemp-1,w
   883  060E  067D               	btfsc status,2
   884  060F  1903               	retlw 0
   885  0610  3400               	incf btemp+1,f
   886  0611  0AFF               	btfsc status,2
   887  0612  1903               	incf btemp,f
   888  0613  0AFE               	goto init_ram0
   889  0614  2E06               ; Initialize objects allocated to BANK0
   890                           psect cinit,class=CODE,delta=2,merge=1
   891                           global init_ram0, __pidataBANK0
   892                           	bcf	status, 7	;select IRP bank0
   893  07EE  1383               	movlw low(__pdataBANK0+23)
   894  07EF  3037               	movwf btemp-1,f
   895  07F0  00FD               	movlw high(__pidataBANK0)
   896  07F1  3006               	movwf btemp,f
   897  07F2  00FE               	movlw low(__pidataBANK0)
   898  07F3  3015               	movwf btemp+1,f
   899  07F4  00FF               	movlw low(__pdataBANK0)
   900  07F5  3020               	movwf fsr,f
   901  07F6  0084               	fcall init_ram0
   902  07F7  120A  118A  2606  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   903                           global end_of_initialization,__end_of__initialization
   904                           
   905                           ;End of C runtime variable initialization code
   906                           
   907                           end_of_initialization:
   908  07FC                     __end_of__initialization:
   909  07FC                     clrf status
   910  07FC  0183               ljmp _main	;jump to C main() function
   911  07FD  120A  118A  2EBA   psect	cstackCOMMON,class=COMMON,space=1,noexec
   912                           global __pcstackCOMMON
   913                           __pcstackCOMMON:
   914  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
   915  0070                     ?_teclado_init:	; 1 bytes @ 0x0
   916  0070                     ??_teclado_init:	; 1 bytes @ 0x0
   917  0070                     ?_teclado_scan:	; 1 bytes @ 0x0
   918  0070                     ??_teclado_scan:	; 1 bytes @ 0x0
   919  0070                     ?_main:	; 1 bytes @ 0x0
   920  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
   921  0070                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
   922  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
   923  0070                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
   924  0070                     	ds	1
   925  0070                     	global	teclado_scan@tecla
   926                           teclado_scan@tecla:	; 1 bytes @ 0x1
   927  0071                     	ds	1
   928  0071                     	global	dispLCD_instReg@i
   929                           dispLCD_instReg@i:	; 1 bytes @ 0x2
   930  0072                     	global	dispLCD_dataReg@d
   931                           dispLCD_dataReg@d:	; 1 bytes @ 0x2
   932  0072                     	global	teclado_scan@i
   933                           teclado_scan@i:	; 1 bytes @ 0x2
   934  0072                     	ds	1
   935  0072                     ??_dispLCD_init:	; 1 bytes @ 0x3
   936  0073                     ?_dispLCD_lincol:	; 1 bytes @ 0x3
   937  0073                     	global	dispLCD_lincol@col
   938                           dispLCD_lincol@col:	; 1 bytes @ 0x3
   939  0073                     	ds	1
   940  0073                     ??_dispLCD_lincol:	; 1 bytes @ 0x4
   941  0074                     	ds	1
   942  0074                     	global	dispLCD_lincol@lin
   943                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
   944  0075                     	ds	1
   945  0075                     ?_dispLCD:	; 1 bytes @ 0x6
   946  0076                     	global	dispLCD@col
   947                           dispLCD@col:	; 1 bytes @ 0x6
   948  0076                     	ds	1
   949  0076                     	global	dispLCD@str
   950                           dispLCD@str:	; 2 bytes @ 0x7
   951  0077                     	ds	2
   952  0077                     ??_dispLCD:	; 1 bytes @ 0x9
   953  0079                     	ds	1
   954  0079                     	global	dispLCD@pos
   955                           dispLCD@pos:	; 1 bytes @ 0xA
   956  007A                     	ds	1
   957  007A                     	global	dispLCD@lin
   958                           dispLCD@lin:	; 1 bytes @ 0xB
   959  007B                     	ds	1
   960  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
   961                           global __pcstackBANK0
   962                           __pcstackBANK0:
   963  0037                     ??_main:	; 1 bytes @ 0x0
   964  0037                     	ds	4
   965  0037                     	global	main@str
   966                           main@str:	; 15 bytes @ 0x4
   967  003B                     	ds	15
   968  003B                     ;!
   969                           ;!Data Sizes:
   970                           ;!    Strings     15
   971                           ;!    Constant    0
   972                           ;!    Data        23
   973                           ;!    BSS         0
   974                           ;!    Persistent  0
   975                           ;!    Stack       0
   976                           ;!
   977                           ;!Auto Spaces:
   978                           ;!    Space          Size  Autos    Used
   979                           ;!    COMMON           14     12      12
   980                           ;!    BANK0            80     19      42
   981                           ;!    BANK1            80      0       0
   982                           ;!    BANK3            96      0       0
   983                           ;!    BANK2            96      0       0
   984                           
   985                           ;!
   986                           ;!Pointer List with Targets:
   987                           ;!
   988                           ;!    dispLCD@str	PTR const unsigned char  size(2) Largest target is 15
   989                           ;!		 -> STR_1(CODE[15]), main@str(BANK0[15]), 
   990                           ;!
   991                           
   992                           
   993                           ;!
   994                           ;!Critical Paths under _main in COMMON
   995                           ;!
   996                           ;!    _main->_dispLCD
   997                           ;!    _dispLCD_init->_dispLCD_instReg
   998                           ;!    _dispLCD->_dispLCD_lincol
   999                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1000                           ;!
  1001                           ;!Critical Paths under _main in BANK0
  1002                           ;!
  1003                           ;!    None.
  1004                           ;!
  1005                           ;!Critical Paths under _main in BANK1
  1006                           ;!
  1007                           ;!    None.
  1008                           ;!
  1009                           ;!Critical Paths under _main in BANK3
  1010                           ;!
  1011                           ;!    None.
  1012                           ;!
  1013                           ;!Critical Paths under _main in BANK2
  1014                           ;!
  1015                           ;!    None.
  1016                           
  1017 ;;
  1018 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1019 ;;
  1020                           
  1021                           ;!
  1022                           ;!Call Graph Tables:
  1023                           ;!
  1024                           ;! ---------------------------------------------------------------------------------
  1025                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1026                           ;! ---------------------------------------------------------------------------------
  1027                           ;! (0) _main                                                19    19      0    1184
  1028                           ;!                                              0 BANK0     19    19      0
  1029                           ;!                            _dispLCD
  1030                           ;!                       _dispLCD_init
  1031                           ;!                       _teclado_init
  1032                           ;!                       _teclado_scan
  1033                           ;! ---------------------------------------------------------------------------------
  1034                           ;! (1) _teclado_scan                                         3     3      0     205
  1035                           ;!                                              0 COMMON     3     3      0
  1036                           ;! ---------------------------------------------------------------------------------
  1037                           ;! (1) _teclado_init                                         0     0      0       0
  1038                           ;! ---------------------------------------------------------------------------------
  1039                           ;! (1) _dispLCD_init                                         0     0      0     120
  1040                           ;!                    _dispLCD_instReg
  1041                           ;! ---------------------------------------------------------------------------------
  1042                           ;! (1) _dispLCD                                              6     3      3     763
  1043                           ;!                                              6 COMMON     6     3      3
  1044                           ;!                    _dispLCD_dataReg
  1045                           ;!                     _dispLCD_lincol
  1046                           ;! ---------------------------------------------------------------------------------
  1047                           ;! (2) _dispLCD_lincol                                       3     2      1     316
  1048                           ;!                                              3 COMMON     3     2      1
  1049                           ;!                    _dispLCD_instReg
  1050                           ;! ---------------------------------------------------------------------------------
  1051                           ;! (2) _dispLCD_instReg                                      3     3      0     120
  1052                           ;!                                              0 COMMON     3     3      0
  1053                           ;! ---------------------------------------------------------------------------------
  1054                           ;! (2) _dispLCD_dataReg                                      3     3      0      30
  1055                           ;!                                              0 COMMON     3     3      0
  1056                           ;! ---------------------------------------------------------------------------------
  1057                           ;! Estimated maximum stack depth 2
  1058                           ;! ---------------------------------------------------------------------------------
  1059                           ;!
  1060                           ;! Call Graph Graphs:
  1061                           ;!
  1062                           ;! _main (ROOT)
  1063                           ;!   _dispLCD
  1064                           ;!     _dispLCD_dataReg
  1065                           ;!     _dispLCD_lincol
  1066                           ;!       _dispLCD_instReg
  1067                           ;!   _dispLCD_init
  1068                           ;!     _dispLCD_instReg
  1069                           ;!   _teclado_init
  1070                           ;!   _teclado_scan
  1071                           ;!
  1072                           
  1073                           ;! Address spaces:
  1074                           
  1075                           ;!Name               Size   Autos  Total    Cost      Usage
  1076                           ;!BANK3               60      0       0       9        0.0%
  1077                           ;!BITBANK3            60      0       0       8        0.0%
  1078                           ;!SFR3                 0      0       0       4        0.0%
  1079                           ;!BITSFR3              0      0       0       4        0.0%
  1080                           ;!BANK2               60      0       0      11        0.0%
  1081                           ;!BITBANK2            60      0       0      10        0.0%
  1082                           ;!SFR2                 0      0       0       5        0.0%
  1083                           ;!BITSFR2              0      0       0       5        0.0%
  1084                           ;!BANK1               50      0       0       7        0.0%
  1085                           ;!BITBANK1            50      0       0       6        0.0%
  1086                           ;!SFR1                 0      0       0       2        0.0%
  1087                           ;!BITSFR1              0      0       0       2        0.0%
  1088                           ;!BANK0               50     13      2A       5       52.5%
  1089                           ;!BITBANK0            50      0       0       4        0.0%
  1090                           ;!SFR0                 0      0       0       1        0.0%
  1091                           ;!BITSFR0              0      0       0       1        0.0%
  1092                           ;!COMMON               E      C       C       1       85.7%
  1093                           ;!BITCOMMON            E      0       0       0        0.0%
  1094                           ;!CODE                 0      0       0       0        0.0%
  1095                           ;!DATA                 0      0      36      12        0.0%
  1096                           ;!ABS                  0      0      36       3        0.0%
  1097                           ;!NULL                 0      0       0       0        0.0%
  1098                           ;!STACK                0      0       0       2        0.0%
  1099                           ;!EEDATA             100      0       0       0        0.0%
  1100                           
  1101                           	global	_main
  1102                           
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 15 in file "main.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  str            15    4[BANK0 ] unsigned char [15]
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : B00/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0      15       0       0       0
  1121 ;;      Temps:          0       4       0       0       0
  1122 ;;      Totals:         0      19       0       0       0
  1123 ;;Total ram usage:       19 bytes
  1124 ;; Hardware stack levels required when called:    3
  1125 ;; This function calls:
  1126 ;;		_dispLCD
  1127 ;;		_dispLCD_init
  1128 ;;		_teclado_init
  1129 ;;		_teclado_scan
  1130 ;; This function is called by:
  1131 ;;		Startup code after reset
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1135                           	file	"main.c"
  1136                           	line	15
  1137                           global __pmaintext
  1138                           __pmaintext:	;psect for function _main
  1139  06BA                     psect	maintext
  1140                           	file	"main.c"
  1141                           	line	15
  1142                           	global	__size_of_main
  1143                           	__size_of_main	equ	__end_of_main-_main
  1144  0052                     	
  1145                           _main:	
  1146  06BA                     ;incstack = 0
  1147                           	opt	stack 5
  1148                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1149                           	line	17
  1150                           	
  1151                           l893:	
  1152  06BA                     ;main.c: 17:     char str[] = "Tecla:        ";
  1153                           	movlw	(main@str)&0ffh
  1154  06BA  303B               	movwf	fsr0
  1155  06BB  0084               	movlw	low(main@F1287)
  1156  06BC  3020               	bcf	status, 5	;RP0=0, select bank0
  1157  06BD  1283               	bcf	status, 6	;RP1=0, select bank0
  1158  06BE  1303               	movwf	(??_main+0)+0
  1159  06BF  00B7               	movf	fsr0,w
  1160  06C0  0804               	movwf	((??_main+0)+0+1)
  1161  06C1  00B8               	movlw	15
  1162  06C2  300F               	movwf	((??_main+0)+0+2)
  1163  06C3  00B9               u400:
  1164  06C4                     	movf	(??_main+0)+0,w
  1165  06C4  0837               	movwf	fsr0
  1166  06C5  0084               	bcf	status, 7	;select IRP bank0
  1167  06C6  1383               	
  1168                           	movf	indf,w
  1169  06C7  0800               	movwf	((??_main+0)+0+3)
  1170  06C8  00BA               	incf	(??_main+0)+0,f
  1171  06C9  0AB7               	movf	((??_main+0)+0+1),w
  1172  06CA  0838               	movwf	fsr0
  1173  06CB  0084               	
  1174                           	movf	((??_main+0)+0+3),w
  1175  06CC  083A               	movwf	indf
  1176  06CD  0080               	incf	((??_main+0)+0+1),f
  1177  06CE  0AB8               	decfsz	((??_main+0)+0+2),f
  1178  06CF  0BB9               	goto	u400
  1179  06D0  2EC4               	
  1180                           	line	18
  1181                           	
  1182                           l895:	
  1183  06D1                     ;main.c: 18:         dispLCD_init();
  1184                           	fcall	_dispLCD_init
  1185  06D1  120A  118A  262C  120A  118A  	line	19
  1186                           	
  1187                           l897:	
  1188  06D6                     ;main.c: 19:         teclado_init();
  1189                           	fcall	_teclado_init
  1190  06D6  120A  118A  25E4  120A  118A  	goto	l899
  1191  06DB  2EDC               	line	21
  1192                           ;main.c: 21:          while( 1 )
  1193                           	
  1194                           l15:	
  1195  06DC                     	line	23
  1196                           	
  1197                           l899:	
  1198  06DC                     ;main.c: 22:     {;main.c: 23:         str[7] = teclado_scan();
  1199                           	fcall	_teclado_scan
  1200  06DC  120A  118A  270C  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1201  06E1  1283               	bcf	status, 6	;RP1=0, select bank0
  1202  06E2  1303               	movwf	(??_main+0)+0
  1203  06E3  00B7               	movf	(??_main+0)+0,w
  1204  06E4  0837               	movwf	0+(main@str)+07h
  1205  06E5  00C2               	line	24
  1206                           	
  1207                           l901:	
  1208  06E6                     ;main.c: 24:         if(str[7] == 0)
  1209                           	movf	(0+(main@str)+07h),w
  1210  06E6  0842               	btfss	status,2
  1211  06E7  1D03               	goto	u411
  1212  06E8  2EEA               	goto	u410
  1213  06E9  2EEB               u411:
  1214  06EA                     	goto	l905
  1215  06EA  2EF0               u410:
  1216  06EB                     	line	25
  1217                           	
  1218                           l903:	
  1219  06EB                     ;main.c: 25:            str[7] = ' ';
  1220                           	movlw	low(020h)
  1221  06EB  3020               	movwf	(??_main+0)+0
  1222  06EC  00B7               	movf	(??_main+0)+0,w
  1223  06ED  0837               	movwf	0+(main@str)+07h
  1224  06EE  00C2               	goto	l905
  1225  06EF  2EF0               	
  1226                           l16:	
  1227  06F0                     	line	26
  1228                           	
  1229                           l905:	
  1230  06F0                     ;main.c: 26:            dispLCD(1,0,str);
  1231                           	clrf	(dispLCD@col)
  1232  06F0  01F6               	movlw	(low(main@str|((0x0)<<8))&0ffh)
  1233  06F1  303B               	movwf	(dispLCD@str)
  1234  06F2  00F7               	movlw	(0x0)
  1235  06F3  3000               	movwf	(dispLCD@str+1)
  1236  06F4  00F8               	movlw	low(01h)
  1237  06F5  3001               	fcall	_dispLCD
  1238  06F6  120A  118A  267F  120A  118A  	line	27
  1239                           	
  1240                           l907:	
  1241  06FB                     ;main.c: 27:         dispLCD(0,1, "Tertos project");
  1242                           	clrf	(dispLCD@col)
  1243  06FB  01F6               	incf	(dispLCD@col),f
  1244  06FC  0AF6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1245  06FD  3001               	movwf	(dispLCD@str)
  1246  06FE  00F7               	movlw	80h
  1247  06FF  3080               	movwf	(dispLCD@str+1)
  1248  0700  00F8               	movlw	low(0)
  1249  0701  3000               	fcall	_dispLCD
  1250  0702  120A  118A  267F  120A  118A  	goto	l899
  1251  0707  2EDC               	line	29
  1252                           ;main.c: 29:     }
  1253                           	
  1254                           l17:	
  1255  0708                     	goto	l899
  1256  0708  2EDC               	
  1257                           l18:	
  1258  0709                     	line	31
  1259                           ;main.c: 30:     return;
  1260                           	
  1261                           l19:	
  1262  0709                     	global	start
  1263                           	ljmp	start
  1264  0709  120A  118A  2800   	opt stack 0
  1265                           GLOBAL	__end_of_main
  1266                           	__end_of_main:
  1267  070C                     	signat	_main,89
  1268                           	global	_teclado_scan
  1269                           
  1270 ;; *************** function _teclado_scan *****************
  1271 ;; Defined at:
  1272 ;;		line 33 in file "teclado.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  i               1    2[COMMON] unsigned char 
  1277 ;;  tecla           1    1[COMMON] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      unsigned char 
  1280 ;; Registers used:
  1281 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         2       0       0       0       0
  1289 ;;      Temps:          1       0       0       0       0
  1290 ;;      Totals:         3       0       0       0       0
  1291 ;;Total ram usage:        3 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1300                           	file	"teclado.c"
  1301                           	line	33
  1302                           global __ptext1
  1303                           __ptext1:	;psect for function _teclado_scan
  1304  070C                     psect	text1
  1305                           	file	"teclado.c"
  1306                           	line	33
  1307                           	global	__size_of_teclado_scan
  1308                           	__size_of_teclado_scan	equ	__end_of_teclado_scan-_teclado_scan
  1309  0062                     	
  1310                           _teclado_scan:	
  1311  070C                     ;incstack = 0
  1312                           	opt	stack 7
  1313                           ; Regs used in _teclado_scan: [wreg-fsr0h+status,2+status,0]
  1314                           	line	36
  1315                           	
  1316                           l845:	
  1317  070C                     ;teclado.c: 36:     char tecla = 0;
  1318                           	clrf	(teclado_scan@tecla)
  1319  070C  01F1               	line	38
  1320                           	
  1321                           l847:	
  1322  070D                     ;teclado.c: 37:     char i;;teclado.c: 38:     PORTB = 0x01;
  1323                           	movlw	low(01h)
  1324  070D  3001               	bcf	status, 5	;RP0=0, select bank0
  1325  070E  1283               	bcf	status, 6	;RP1=0, select bank0
  1326  070F  1303               	movwf	(6)	;volatile
  1327  0710  0086               	line	39
  1328                           	
  1329                           l849:	
  1330  0711                     ;teclado.c: 39:      for( i=0; i<4; i++ )
  1331                           	clrf	(teclado_scan@i)
  1332  0711  01F2               	movlw	low(04h)
  1333  0712  3004               	subwf	(teclado_scan@i),w
  1334  0713  0272               	skipc
  1335  0714  1C03               	goto	u311
  1336  0715  2F17               	goto	u310
  1337  0716  2F18               u311:
  1338  0717                     	goto	l853
  1339  0717  2F1A               u310:
  1340  0718                     	goto	l861
  1341  0718  2F3D               	
  1342                           l851:	
  1343  0719                     	goto	l861
  1344  0719  2F3D               	
  1345                           l86:	
  1346  071A                     	line	40
  1347                           	
  1348                           l853:	
  1349  071A                     ;teclado.c: 40:     { if( PORTB & 0x10<<i ) tecla = tabela [0][i]; }
  1350                           	movlw	low(010h)
  1351  071A  3010               	movwf	(??_teclado_scan+0)+0
  1352  071B  00F0               	incf	(teclado_scan@i),w
  1353  071C  0A72               	goto	u324
  1354  071D  2F20               u325:
  1355  071E                     	clrc
  1356  071E  1003               	rlf	(??_teclado_scan+0)+0,f
  1357  071F  0DF0               u324:
  1358  0720                     	addlw	-1
  1359  0720  3EFF               	skipz
  1360  0721  1D03               	goto	u325
  1361  0722  2F1E               	movf	0+(??_teclado_scan+0)+0,w
  1362  0723  0870               	andwf	(6),w	;volatile
  1363  0724  0506               	btfsc	status,2
  1364  0725  1903               	goto	u331
  1365  0726  2F28               	goto	u330
  1366  0727  2F29               u331:
  1367  0728                     	goto	l857
  1368  0728  2F32               u330:
  1369  0729                     	
  1370                           l855:	
  1371  0729                     	movf	(teclado_scan@i),w
  1372  0729  0872               	addlw	low(_tabela|((0x0)<<8))&0ffh
  1373  072A  3E2F               	movwf	fsr0
  1374  072B  0084               	bcf	status, 7	;select IRP bank0
  1375  072C  1383               	movf	indf,w
  1376  072D  0800               	movwf	(??_teclado_scan+0)+0
  1377  072E  00F0               	movf	(??_teclado_scan+0)+0,w
  1378  072F  0870               	movwf	(teclado_scan@tecla)
  1379  0730  00F1               	goto	l857
  1380  0731  2F32               	
  1381                           l88:	
  1382  0732                     	
  1383                           l857:	
  1384  0732                     	movlw	low(01h)
  1385  0732  3001               	movwf	(??_teclado_scan+0)+0
  1386  0733  00F0               	movf	(??_teclado_scan+0)+0,w
  1387  0734  0870               	addwf	(teclado_scan@i),f
  1388  0735  07F2               	
  1389                           l859:	
  1390  0736                     	movlw	low(04h)
  1391  0736  3004               	subwf	(teclado_scan@i),w
  1392  0737  0272               	skipc
  1393  0738  1C03               	goto	u341
  1394  0739  2F3B               	goto	u340
  1395  073A  2F3C               u341:
  1396  073B                     	goto	l853
  1397  073B  2F1A               u340:
  1398  073C                     	goto	l861
  1399  073C  2F3D               	
  1400                           l87:	
  1401  073D                     	line	42
  1402                           	
  1403                           l861:	
  1404  073D                     ;teclado.c: 42:     PORTB = 0x02;
  1405                           	movlw	low(02h)
  1406  073D  3002               	movwf	(6)	;volatile
  1407  073E  0086               	line	43
  1408                           	
  1409                           l863:	
  1410  073F                     ;teclado.c: 43:      for( i=0; i<4; i++ )
  1411                           	clrf	(teclado_scan@i)
  1412  073F  01F2               	
  1413                           l865:	
  1414  0740                     	movlw	low(04h)
  1415  0740  3004               	subwf	(teclado_scan@i),w
  1416  0741  0272               	skipc
  1417  0742  1C03               	goto	u351
  1418  0743  2F45               	goto	u350
  1419  0744  2F46               u351:
  1420  0745                     	goto	l869
  1421  0745  2F48               u350:
  1422  0746                     	goto	l877
  1423  0746  2F6B               	
  1424                           l867:	
  1425  0747                     	goto	l877
  1426  0747  2F6B               	
  1427                           l89:	
  1428  0748                     	line	44
  1429                           	
  1430                           l869:	
  1431  0748                     ;teclado.c: 44:     { if( PORTB & 0x10<<i ) tecla = tabela [1][i]; }
  1432                           	movlw	low(010h)
  1433  0748  3010               	movwf	(??_teclado_scan+0)+0
  1434  0749  00F0               	incf	(teclado_scan@i),w
  1435  074A  0A72               	goto	u364
  1436  074B  2F4E               u365:
  1437  074C                     	clrc
  1438  074C  1003               	rlf	(??_teclado_scan+0)+0,f
  1439  074D  0DF0               u364:
  1440  074E                     	addlw	-1
  1441  074E  3EFF               	skipz
  1442  074F  1D03               	goto	u365
  1443  0750  2F4C               	movf	0+(??_teclado_scan+0)+0,w
  1444  0751  0870               	andwf	(6),w	;volatile
  1445  0752  0506               	btfsc	status,2
  1446  0753  1903               	goto	u371
  1447  0754  2F56               	goto	u370
  1448  0755  2F57               u371:
  1449  0756                     	goto	l873
  1450  0756  2F60               u370:
  1451  0757                     	
  1452                           l871:	
  1453  0757                     	movf	(teclado_scan@i),w
  1454  0757  0872               	addlw	low(_tabela|((0x0)<<8)+04h)&0ffh
  1455  0758  3E33               	movwf	fsr0
  1456  0759  0084               	bcf	status, 7	;select IRP bank0
  1457  075A  1383               	movf	indf,w
  1458  075B  0800               	movwf	(??_teclado_scan+0)+0
  1459  075C  00F0               	movf	(??_teclado_scan+0)+0,w
  1460  075D  0870               	movwf	(teclado_scan@tecla)
  1461  075E  00F1               	goto	l873
  1462  075F  2F60               	
  1463                           l91:	
  1464  0760                     	
  1465                           l873:	
  1466  0760                     	movlw	low(01h)
  1467  0760  3001               	movwf	(??_teclado_scan+0)+0
  1468  0761  00F0               	movf	(??_teclado_scan+0)+0,w
  1469  0762  0870               	addwf	(teclado_scan@i),f
  1470  0763  07F2               	
  1471                           l875:	
  1472  0764                     	movlw	low(04h)
  1473  0764  3004               	subwf	(teclado_scan@i),w
  1474  0765  0272               	skipc
  1475  0766  1C03               	goto	u381
  1476  0767  2F69               	goto	u380
  1477  0768  2F6A               u381:
  1478  0769                     	goto	l869
  1479  0769  2F48               u380:
  1480  076A                     	goto	l877
  1481  076A  2F6B               	
  1482                           l90:	
  1483  076B                     	line	46
  1484                           	
  1485                           l877:	
  1486  076B                     ;teclado.c: 46:     return(tecla);
  1487                           	movf	(teclado_scan@tecla),w
  1488  076B  0871               	goto	l92
  1489  076C  2F6D               	
  1490                           l879:	
  1491  076D                     	line	47
  1492                           	
  1493                           l92:	
  1494  076D                     	return
  1495  076D  0008               	opt stack 0
  1496                           GLOBAL	__end_of_teclado_scan
  1497                           	__end_of_teclado_scan:
  1498  076E                     	signat	_teclado_scan,89
  1499                           	global	_teclado_init
  1500                           
  1501 ;; *************** function _teclado_init *****************
  1502 ;; Defined at:
  1503 ;;		line 22 in file "teclado.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0
  1520 ;;      Totals:         0       0       0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1530                           	line	22
  1531                           global __ptext2
  1532                           __ptext2:	;psect for function _teclado_init
  1533  05E4                     psect	text2
  1534                           	file	"teclado.c"
  1535                           	line	22
  1536                           	global	__size_of_teclado_init
  1537                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  1538  000B                     	
  1539                           _teclado_init:	
  1540  05E4                     ;incstack = 0
  1541                           	opt	stack 7
  1542                           ; Regs used in _teclado_init: [wreg+status,2]
  1543                           	line	24
  1544                           	
  1545                           l731:	
  1546  05E4                     ;teclado.c: 24:     ANSELH = 0;
  1547                           	bsf	status, 5	;RP0=1, select bank3
  1548  05E4  1683               	bsf	status, 6	;RP1=1, select bank3
  1549  05E5  1703               	clrf	(393)^0180h	;volatile
  1550  05E6  0189               	line	25
  1551                           	
  1552                           l733:	
  1553  05E7                     ;teclado.c: 25:     TRISB = 0xF0;
  1554                           	movlw	low(0F0h)
  1555  05E7  30F0               	bsf	status, 5	;RP0=1, select bank1
  1556  05E8  1683               	bcf	status, 6	;RP1=0, select bank1
  1557  05E9  1303               	movwf	(134)^080h	;volatile
  1558  05EA  0086               	line	26
  1559                           	
  1560                           l735:	
  1561  05EB                     ;teclado.c: 26:     PORTB = 0;
  1562                           	bcf	status, 5	;RP0=0, select bank0
  1563  05EB  1283               	bcf	status, 6	;RP1=0, select bank0
  1564  05EC  1303               	clrf	(6)	;volatile
  1565  05ED  0186               	line	28
  1566                           	
  1567                           l81:	
  1568  05EE                     	return
  1569  05EE  0008               	opt stack 0
  1570                           GLOBAL	__end_of_teclado_init
  1571                           	__end_of_teclado_init:
  1572  05EF                     	signat	_teclado_init,89
  1573                           	global	_dispLCD_init
  1574                           
  1575 ;; *************** function _dispLCD_init *****************
  1576 ;; Defined at:
  1577 ;;		line 141 in file "DispLCD4vias.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0
  1594 ;;      Totals:         0       0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    1
  1598 ;; This function calls:
  1599 ;;		_dispLCD_instReg
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1605                           	file	"DispLCD4vias.c"
  1606                           	line	141
  1607                           global __ptext3
  1608                           __ptext3:	;psect for function _dispLCD_init
  1609  062C                     psect	text3
  1610                           	file	"DispLCD4vias.c"
  1611                           	line	141
  1612                           	global	__size_of_dispLCD_init
  1613                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  1614  0024                     	
  1615                           _dispLCD_init:	
  1616  062C                     ;incstack = 0
  1617                           	opt	stack 6
  1618                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  1619                           	line	143
  1620                           	
  1621                           l727:	
  1622  062C                     ;DispLCD4vias.c: 143:     TRISDbits.TRISD2 = 0;
  1623                           	bsf	status, 5	;RP0=1, select bank1
  1624  062C  1683               	bcf	status, 6	;RP1=0, select bank1
  1625  062D  1303               	bcf	(136)^080h,2	;volatile
  1626  062E  1108               	line	144
  1627                           ;DispLCD4vias.c: 144:     TRISDbits.TRISD3 = 0;
  1628                           	bcf	(136)^080h,3	;volatile
  1629  062F  1188               	line	146
  1630                           ;DispLCD4vias.c: 146:     TRISDbits.TRISD4 = 0;
  1631                           	bcf	(136)^080h,4	;volatile
  1632  0630  1208               	line	147
  1633                           ;DispLCD4vias.c: 147:     TRISDbits.TRISD5 = 0;
  1634                           	bcf	(136)^080h,5	;volatile
  1635  0631  1288               	line	148
  1636                           ;DispLCD4vias.c: 148:     TRISDbits.TRISD6 = 0;
  1637                           	bcf	(136)^080h,6	;volatile
  1638  0632  1308               	line	149
  1639                           ;DispLCD4vias.c: 149:     TRISDbits.TRISD7 = 0;
  1640                           	bcf	(136)^080h,7	;volatile
  1641  0633  1388               	line	151
  1642                           ;DispLCD4vias.c: 151:     LCDbits.EN = 1;
  1643                           	bcf	status, 5	;RP0=0, select bank0
  1644  0634  1283               	bcf	status, 6	;RP1=0, select bank0
  1645  0635  1303               	bsf	(8),3	;volatile
  1646  0636  1588               	line	152
  1647                           	
  1648                           l729:	
  1649  0637                     ;DispLCD4vias.c: 152:     dispLCD_instReg( 0x20|0x00|0x08);
  1650                           	movlw	low(028h)
  1651  0637  3028               	fcall	_dispLCD_instReg
  1652  0638  120A  118A  276E  120A  118A  	line	153
  1653                           ;DispLCD4vias.c: 153:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  1654                           	movlw	low(0Ch)
  1655  063D  300C               	fcall	_dispLCD_instReg
  1656  063E  120A  118A  276E  120A  118A  	line	154
  1657                           ;DispLCD4vias.c: 154:     dispLCD_instReg( 0x01 );
  1658                           	movlw	low(01h)
  1659  0643  3001               	fcall	_dispLCD_instReg
  1660  0644  120A  118A  276E  120A  118A  	line	155
  1661                           ;DispLCD4vias.c: 155:     dispLCD_instReg( 0x02 );
  1662                           	movlw	low(02h)
  1663  0649  3002               	fcall	_dispLCD_instReg
  1664  064A  120A  118A  276E  120A  118A  	line	156
  1665                           	
  1666                           l46:	
  1667  064F                     	return
  1668  064F  0008               	opt stack 0
  1669                           GLOBAL	__end_of_dispLCD_init
  1670                           	__end_of_dispLCD_init:
  1671  0650                     	signat	_dispLCD_init,89
  1672                           	global	_dispLCD
  1673                           
  1674 ;; *************** function _dispLCD *****************
  1675 ;; Defined at:
  1676 ;;		line 159 in file "DispLCD4vias.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  lin             1    wreg     unsigned char 
  1679 ;;  col             1    6[COMMON] unsigned char 
  1680 ;;  str             2    7[COMMON] PTR const unsigned char 
  1681 ;;		 -> STR_1(15), main@str(15), 
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  lin             1   11[COMMON] unsigned char 
  1684 ;;  pos             1   10[COMMON] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1694 ;;      Params:         3       0       0       0       0
  1695 ;;      Locals:         2       0       0       0       0
  1696 ;;      Temps:          1       0       0       0       0
  1697 ;;      Totals:         6       0       0       0       0
  1698 ;;Total ram usage:        6 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    2
  1701 ;; This function calls:
  1702 ;;		_dispLCD_dataReg
  1703 ;;		_dispLCD_lincol
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1709                           	line	159
  1710                           global __ptext4
  1711                           __ptext4:	;psect for function _dispLCD
  1712  067F                     psect	text4
  1713                           	file	"DispLCD4vias.c"
  1714                           	line	159
  1715                           	global	__size_of_dispLCD
  1716                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  1717  003B                     	
  1718                           _dispLCD:	
  1719  067F                     ;incstack = 0
  1720                           	opt	stack 5
  1721                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1722                           ;dispLCD@lin stored from wreg
  1723                           	movwf	(dispLCD@lin)
  1724  067F  00FB               	line	161
  1725                           	
  1726                           l881:	
  1727  0680                     ;DispLCD4vias.c: 159: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );DispLCD4vias.c: 160: {;DispLCD4vias.c: 161:     char pos = col;
  1728                           	movf	(dispLCD@col),w
  1729  0680  0876               	movwf	(??_dispLCD+0)+0
  1730  0681  00F9               	movf	(??_dispLCD+0)+0,w
  1731  0682  0879               	movwf	(dispLCD@pos)
  1732  0683  00FA               	line	162
  1733                           	
  1734                           l883:	
  1735  0684                     ;DispLCD4vias.c: 162:     dispLCD_lincol( lin, col );
  1736                           	movf	(dispLCD@col),w
  1737  0684  0876               	movwf	(??_dispLCD+0)+0
  1738  0685  00F9               	movf	(??_dispLCD+0)+0,w
  1739  0686  0879               	movwf	(dispLCD_lincol@col)
  1740  0687  00F3               	movf	(dispLCD@lin),w
  1741  0688  087B               	fcall	_dispLCD_lincol
  1742  0689  120A  118A  25EF  120A  118A  	line	164
  1743                           ;DispLCD4vias.c: 164:     while( *str )
  1744                           	goto	l891
  1745  068E  2EA8               	
  1746                           l50:	
  1747  068F                     	line	166
  1748                           	
  1749                           l885:	
  1750  068F                     ;DispLCD4vias.c: 165:     {;DispLCD4vias.c: 166:         dispLCD_dataReg( *str );
  1751                           	movf	(dispLCD@str+1),w
  1752  068F  0878               	bcf	status, 5	;RP0=0, select bank0
  1753  0690  1283               	bcf	status, 6	;RP1=0, select bank0
  1754  0691  1303               	movwf	btemp+1
  1755  0692  00FF               	movf	(dispLCD@str),w
  1756  0693  0877               	movwf	fsr0
  1757  0694  0084               	fcall	stringtab
  1758  0695  120A  118A  2003  120A  118A  	fcall	_dispLCD_dataReg
  1759  069A  120A  118A  2650  120A  118A  	line	167
  1760                           	
  1761                           l887:	
  1762  069F                     ;DispLCD4vias.c: 167:         ++str;
  1763                           	movlw	01h
  1764  069F  3001               	addwf	(dispLCD@str),f
  1765  06A0  07F7               	skipnc
  1766  06A1  1803               	incf	(dispLCD@str+1),f
  1767  06A2  0AF8               	line	168
  1768                           	
  1769                           l889:	
  1770  06A3                     ;DispLCD4vias.c: 168:         ++pos;
  1771                           	movlw	low(01h)
  1772  06A3  3001               	movwf	(??_dispLCD+0)+0
  1773  06A4  00F9               	movf	(??_dispLCD+0)+0,w
  1774  06A5  0879               	addwf	(dispLCD@pos),f
  1775  06A6  07FA               	goto	l891
  1776  06A7  2EA8               	line	169
  1777                           ;DispLCD4vias.c: 169:     }
  1778                           	
  1779                           l49:	
  1780  06A8                     	line	164
  1781                           	
  1782                           l891:	
  1783  06A8                     ;DispLCD4vias.c: 164:     while( *str )
  1784                           	movf	(dispLCD@str+1),w
  1785  06A8  0878               	bcf	status, 5	;RP0=0, select bank0
  1786  06A9  1283               	bcf	status, 6	;RP1=0, select bank0
  1787  06AA  1303               	movwf	btemp+1
  1788  06AB  00FF               	movf	(dispLCD@str),w
  1789  06AC  0877               	movwf	fsr0
  1790  06AD  0084               	fcall	stringtab
  1791  06AE  120A  118A  2003  120A  118A  	xorlw	0
  1792  06B3  3A00               	skipz
  1793  06B4  1D03               	goto	u391
  1794  06B5  2EB7               	goto	u390
  1795  06B6  2EB8               u391:
  1796  06B7                     	goto	l885
  1797  06B7  2E8F               u390:
  1798  06B8                     	goto	l52
  1799  06B8  2EB9               	
  1800                           l51:	
  1801  06B9                     	line	170
  1802                           	
  1803                           l52:	
  1804  06B9                     	return
  1805  06B9  0008               	opt stack 0
  1806                           GLOBAL	__end_of_dispLCD
  1807                           	__end_of_dispLCD:
  1808  06BA                     	signat	_dispLCD,12409
  1809                           	global	_dispLCD_lincol
  1810                           
  1811 ;; *************** function _dispLCD_lincol *****************
  1812 ;; Defined at:
  1813 ;;		line 135 in file "DispLCD4vias.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  lin             1    wreg     unsigned char 
  1816 ;;  col             1    3[COMMON] unsigned char 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  lin             1    5[COMMON] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         1       0       0       0       0
  1829 ;;      Locals:         1       0       0       0       0
  1830 ;;      Temps:          1       0       0       0       0
  1831 ;;      Totals:         3       0       0       0       0
  1832 ;;Total ram usage:        3 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    1
  1835 ;; This function calls:
  1836 ;;		_dispLCD_instReg
  1837 ;; This function is called by:
  1838 ;;		_dispLCD
  1839 ;;		_dispLCD_num
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1843                           	line	135
  1844                           global __ptext5
  1845                           __ptext5:	;psect for function _dispLCD_lincol
  1846  05EF                     psect	text5
  1847                           	file	"DispLCD4vias.c"
  1848                           	line	135
  1849                           	global	__size_of_dispLCD_lincol
  1850                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  1851  0013                     	
  1852                           _dispLCD_lincol:	
  1853  05EF                     ;incstack = 0
  1854                           	opt	stack 5
  1855                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  1856                           ;dispLCD_lincol@lin stored from wreg
  1857                           	movwf	(dispLCD_lincol@lin)
  1858  05EF  00F5               	line	137
  1859                           	
  1860                           l843:	
  1861  05F0                     ;DispLCD4vias.c: 135: void dispLCD_lincol( unsigned char lin, unsigned char col);DispLCD
                                 4vias.c: 136: {;DispLCD4vias.c: 137:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0
                                 x00) & 0x7F)) );
  1862                           	movf	(dispLCD_lincol@lin),w
  1863  05F0  0875               	movwf	(??_dispLCD_lincol+0)+0
  1864  05F1  00F4               	movlw	06h
  1865  05F2  3006               u305:
  1866  05F3                     	clrc
  1867  05F3  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  1868  05F4  0DF4               	addlw	-1
  1869  05F5  3EFF               	skipz
  1870  05F6  1D03               	goto	u305
  1871  05F7  2DF3               	movf	(dispLCD_lincol@col),w
  1872  05F8  0873               	addwf	0+(??_dispLCD_lincol+0)+0,w
  1873  05F9  0774               	andlw	07Fh
  1874  05FA  397F               	addlw	080h
  1875  05FB  3E80               	fcall	_dispLCD_instReg
  1876  05FC  120A  118A  276E  120A  118A  	line	138
  1877                           	
  1878                           l43:	
  1879  0601                     	return
  1880  0601  0008               	opt stack 0
  1881                           GLOBAL	__end_of_dispLCD_lincol
  1882                           	__end_of_dispLCD_lincol:
  1883  0602                     	signat	_dispLCD_lincol,8313
  1884                           	global	_dispLCD_instReg
  1885                           
  1886 ;; *************** function _dispLCD_instReg *****************
  1887 ;; Defined at:
  1888 ;;		line 86 in file "DispLCD4vias.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  i               1    wreg     unsigned char 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  i               1    2[COMMON] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      void 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1902 ;;      Params:         0       0       0       0       0
  1903 ;;      Locals:         1       0       0       0       0
  1904 ;;      Temps:          2       0       0       0       0
  1905 ;;      Totals:         3       0       0       0       0
  1906 ;;Total ram usage:        3 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; This function calls:
  1909 ;;		Nothing
  1910 ;; This function is called by:
  1911 ;;		_dispLCD_lincol
  1912 ;;		_dispLCD_init
  1913 ;;		_dispLCD_clr
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1917                           	line	86
  1918                           global __ptext6
  1919                           __ptext6:	;psect for function _dispLCD_instReg
  1920  076E                     psect	text6
  1921                           	file	"DispLCD4vias.c"
  1922                           	line	86
  1923                           	global	__size_of_dispLCD_instReg
  1924                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  1925  0080                     	
  1926                           _dispLCD_instReg:	
  1927  076E                     ;incstack = 0
  1928                           	opt	stack 6
  1929                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  1930                           ;dispLCD_instReg@i stored from wreg
  1931                           	movwf	(dispLCD_instReg@i)
  1932  076E  00F2               	line	88
  1933                           	
  1934                           l665:	
  1935  076F                     ;DispLCD4vias.c: 86: void dispLCD_instReg( unsigned char i );DispLCD4vias.c: 87: {;DispL
                                 CD4vias.c: 88:     LCDbits.RS = 0;
  1936                           	bcf	status, 5	;RP0=0, select bank0
  1937  076F  1283               	bcf	status, 6	;RP1=0, select bank0
  1938  0770  1303               	bcf	(8),2	;volatile
  1939  0771  1108               	line	89
  1940                           	
  1941                           l667:	
  1942  0772                     ;DispLCD4vias.c: 89:     LCDbits.BUS = (i>>4);
  1943                           	movf	(dispLCD_instReg@i),w
  1944  0772  0872               	movwf	(??_dispLCD_instReg+0)+0
  1945  0773  00F0               	movlw	04h
  1946  0774  3004               u15:
  1947  0775                     	clrc
  1948  0775  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  1949  0776  0CF0               	addlw	-1
  1950  0777  3EFF               	skipz
  1951  0778  1D03               	goto	u15
  1952  0779  2F75               	movf	0+(??_dispLCD_instReg+0)+0,w
  1953  077A  0870               	movwf	(??_dispLCD_instReg+1)+0
  1954  077B  00F1               	swapf	(??_dispLCD_instReg+1)+0,f
  1955  077C  0EF1               	movf	(8),w	;volatile
  1956  077D  0808               	xorwf	(??_dispLCD_instReg+1)+0,w
  1957  077E  0671               	andlw	not (((1<<4)-1)<<4)
  1958  077F  390F               	xorwf	(??_dispLCD_instReg+1)+0,w
  1959  0780  0671               	movwf	(8)	;volatile
  1960  0781  0088               	line	91
  1961                           	
  1962                           l669:	
  1963  0782                     ;DispLCD4vias.c: 91:     LCDbits.EN = 0;
  1964                           	bcf	(8),3	;volatile
  1965  0782  1188               	line	92
  1966                           ;DispLCD4vias.c: 92:     if( i == 0x01 || i == 0x02 )
  1967                           		decf	((dispLCD_instReg@i)),w
  1968  0783  0372               	btfsc	status,2
  1969  0784  1903               	goto	u21
  1970  0785  2F87               	goto	u20
  1971  0786  2F88               u21:
  1972  0787                     	goto	l673
  1973  0787  2F8F               u20:
  1974  0788                     	
  1975                           l671:	
  1976  0788                     		movlw	2
  1977  0788  3002               	xorwf	((dispLCD_instReg@i)),w
  1978  0789  0672               	btfss	status,2
  1979  078A  1D03               	goto	u31
  1980  078B  2F8D               	goto	u30
  1981  078C  2F8E               u31:
  1982  078D                     	goto	l675
  1983  078D  2F99               u30:
  1984  078E                     	goto	l673
  1985  078E  2F8F               	
  1986                           l30:	
  1987  078F                     	line	93
  1988                           	
  1989                           l673:	
  1990  078F                     ;DispLCD4vias.c: 93:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1991                           	opt asmopt_push
  1992                           opt asmopt_off
  1993                           movlw	3
  1994  078F  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  1995  0790  00F1               	movlw	151
  1996  0791  3097               movwf	((??_dispLCD_instReg+0)+0),f
  1997  0792  00F0               	u517:
  1998  0793                     decfsz	((??_dispLCD_instReg+0)+0),f
  1999  0793  0BF0               	goto	u517
  2000  0794  2F93               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  2001  0795  0BF1               	goto	u517
  2002  0796  2F93               	nop2
  2003  0797  2F98               opt asmopt_pop
  2004                           
  2005                           	goto	l677
  2006  0798  2F9E               	line	94
  2007                           ;DispLCD4vias.c: 94:     else
  2008                           	
  2009                           l28:	
  2010  0799                     	line	95
  2011                           	
  2012                           l675:	
  2013  0799                     ;DispLCD4vias.c: 95:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2014                           	opt asmopt_push
  2015                           opt asmopt_off
  2016                           	movlw	13
  2017  0799  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2018  079A  00F0               	u527:
  2019  079B                     decfsz	(??_dispLCD_instReg+0)+0,f
  2020  079B  0BF0               	goto	u527
  2021  079C  2F9B               opt asmopt_pop
  2022                           
  2023                           	goto	l677
  2024  079D  2F9E               	
  2025                           l31:	
  2026  079E                     	line	96
  2027                           	
  2028                           l677:	
  2029  079E                     ;DispLCD4vias.c: 96:     LCDbits.EN = 1;
  2030                           	bcf	status, 5	;RP0=0, select bank0
  2031  079E  1283               	bcf	status, 6	;RP1=0, select bank0
  2032  079F  1303               	bsf	(8),3	;volatile
  2033  07A0  1588               	line	99
  2034                           	
  2035                           l679:	
  2036  07A1                     ;DispLCD4vias.c: 99:     if( (i & 0xF0) == (0x20 | 0x00) )
  2037                           	movlw	low(0F0h)
  2038  07A1  30F0               	andwf	(dispLCD_instReg@i),w
  2039  07A2  0572               	movwf	(??_dispLCD_instReg+0)+0
  2040  07A3  00F0               		movlw	32
  2041  07A4  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  2042  07A5  0670               	btfss	status,2
  2043  07A6  1D03               	goto	u41
  2044  07A7  2FA9               	goto	u40
  2045  07A8  2FAA               u41:
  2046  07A9                     	goto	l691
  2047  07A9  2FC4               u40:
  2048  07AA                     	line	101
  2049                           	
  2050                           l681:	
  2051  07AA                     ;DispLCD4vias.c: 100:     {;DispLCD4vias.c: 101:         LCDbits.RS = 0;
  2052                           	bcf	(8),2	;volatile
  2053  07AA  1108               	line	102
  2054                           	
  2055                           l683:	
  2056  07AB                     ;DispLCD4vias.c: 102:         LCDbits.BUS = i>>4;
  2057                           	movf	(dispLCD_instReg@i),w
  2058  07AB  0872               	movwf	(??_dispLCD_instReg+0)+0
  2059  07AC  00F0               	movlw	04h
  2060  07AD  3004               u55:
  2061  07AE                     	clrc
  2062  07AE  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  2063  07AF  0CF0               	addlw	-1
  2064  07B0  3EFF               	skipz
  2065  07B1  1D03               	goto	u55
  2066  07B2  2FAE               	movf	0+(??_dispLCD_instReg+0)+0,w
  2067  07B3  0870               	movwf	(??_dispLCD_instReg+1)+0
  2068  07B4  00F1               	swapf	(??_dispLCD_instReg+1)+0,f
  2069  07B5  0EF1               	movf	(8),w	;volatile
  2070  07B6  0808               	xorwf	(??_dispLCD_instReg+1)+0,w
  2071  07B7  0671               	andlw	not (((1<<4)-1)<<4)
  2072  07B8  390F               	xorwf	(??_dispLCD_instReg+1)+0,w
  2073  07B9  0671               	movwf	(8)	;volatile
  2074  07BA  0088               	line	103
  2075                           	
  2076                           l685:	
  2077  07BB                     ;DispLCD4vias.c: 103:         LCDbits.EN = 0;
  2078                           	bcf	(8),3	;volatile
  2079  07BB  1188               	line	104
  2080                           	
  2081                           l687:	
  2082  07BC                     ;DispLCD4vias.c: 104:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2083                           	opt asmopt_push
  2084                           opt asmopt_off
  2085                           	movlw	13
  2086  07BC  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2087  07BD  00F0               	u537:
  2088  07BE                     decfsz	(??_dispLCD_instReg+0)+0,f
  2089  07BE  0BF0               	goto	u537
  2090  07BF  2FBE               opt asmopt_pop
  2091                           
  2092                           	line	105
  2093                           	
  2094                           l689:	
  2095  07C0                     ;DispLCD4vias.c: 105:         LCDbits.EN = 1;
  2096                           	bcf	status, 5	;RP0=0, select bank0
  2097  07C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2098  07C1  1303               	bsf	(8),3	;volatile
  2099  07C2  1588               	goto	l691
  2100  07C3  2FC4               	line	106
  2101                           ;DispLCD4vias.c: 106:     }
  2102                           	
  2103                           l32:	
  2104  07C4                     	line	108
  2105                           	
  2106                           l691:	
  2107  07C4                     ;DispLCD4vias.c: 108:     LCDbits.RS = 0;
  2108                           	bcf	(8),2	;volatile
  2109  07C4  1108               	line	109
  2110                           	
  2111                           l693:	
  2112  07C5                     ;DispLCD4vias.c: 109:     LCDbits.BUS = i & 0x0F;
  2113                           	movf	(dispLCD_instReg@i),w
  2114  07C5  0872               	andlw	0Fh
  2115  07C6  390F               	movwf	(??_dispLCD_instReg+0)+0
  2116  07C7  00F0               	swapf	(??_dispLCD_instReg+0)+0,f
  2117  07C8  0EF0               	movf	(8),w	;volatile
  2118  07C9  0808               	xorwf	(??_dispLCD_instReg+0)+0,w
  2119  07CA  0670               	andlw	not (((1<<4)-1)<<4)
  2120  07CB  390F               	xorwf	(??_dispLCD_instReg+0)+0,w
  2121  07CC  0670               	movwf	(8)	;volatile
  2122  07CD  0088               	line	110
  2123                           	
  2124                           l695:	
  2125  07CE                     ;DispLCD4vias.c: 110:     LCDbits.EN = 0;
  2126                           	bcf	(8),3	;volatile
  2127  07CE  1188               	line	111
  2128                           	
  2129                           l697:	
  2130  07CF                     ;DispLCD4vias.c: 111:     if( i == 0x01 || i == 0x02 )
  2131                           		decf	((dispLCD_instReg@i)),w
  2132  07CF  0372               	btfsc	status,2
  2133  07D0  1903               	goto	u61
  2134  07D1  2FD3               	goto	u60
  2135  07D2  2FD4               u61:
  2136  07D3                     	goto	l701
  2137  07D3  2FDB               u60:
  2138  07D4                     	
  2139                           l699:	
  2140  07D4                     		movlw	2
  2141  07D4  3002               	xorwf	((dispLCD_instReg@i)),w
  2142  07D5  0672               	btfss	status,2
  2143  07D6  1D03               	goto	u71
  2144  07D7  2FD9               	goto	u70
  2145  07D8  2FDA               u71:
  2146  07D9                     	goto	l703
  2147  07D9  2FE5               u70:
  2148  07DA                     	goto	l701
  2149  07DA  2FDB               	
  2150                           l35:	
  2151  07DB                     	line	112
  2152                           	
  2153                           l701:	
  2154  07DB                     ;DispLCD4vias.c: 112:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2155                           	opt asmopt_push
  2156                           opt asmopt_off
  2157                           movlw	3
  2158  07DB  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  2159  07DC  00F1               	movlw	151
  2160  07DD  3097               movwf	((??_dispLCD_instReg+0)+0),f
  2161  07DE  00F0               	u547:
  2162  07DF                     decfsz	((??_dispLCD_instReg+0)+0),f
  2163  07DF  0BF0               	goto	u547
  2164  07E0  2FDF               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  2165  07E1  0BF1               	goto	u547
  2166  07E2  2FDF               	nop2
  2167  07E3  2FE4               opt asmopt_pop
  2168                           
  2169                           	goto	l705
  2170  07E4  2FEA               	line	113
  2171                           ;DispLCD4vias.c: 113:     else
  2172                           	
  2173                           l33:	
  2174  07E5                     	line	114
  2175                           	
  2176                           l703:	
  2177  07E5                     ;DispLCD4vias.c: 114:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2178                           	opt asmopt_push
  2179                           opt asmopt_off
  2180                           	movlw	13
  2181  07E5  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2182  07E6  00F0               	u557:
  2183  07E7                     decfsz	(??_dispLCD_instReg+0)+0,f
  2184  07E7  0BF0               	goto	u557
  2185  07E8  2FE7               opt asmopt_pop
  2186                           
  2187                           	goto	l705
  2188  07E9  2FEA               	
  2189                           l36:	
  2190  07EA                     	line	115
  2191                           	
  2192                           l705:	
  2193  07EA                     ;DispLCD4vias.c: 115:     LCDbits.EN = 1;
  2194                           	bcf	status, 5	;RP0=0, select bank0
  2195  07EA  1283               	bcf	status, 6	;RP1=0, select bank0
  2196  07EB  1303               	bsf	(8),3	;volatile
  2197  07EC  1588               	line	116
  2198                           	
  2199                           l37:	
  2200  07ED                     	return
  2201  07ED  0008               	opt stack 0
  2202                           GLOBAL	__end_of_dispLCD_instReg
  2203                           	__end_of_dispLCD_instReg:
  2204  07EE                     	signat	_dispLCD_instReg,4217
  2205                           	global	_dispLCD_dataReg
  2206                           
  2207 ;; *************** function _dispLCD_dataReg *****************
  2208 ;; Defined at:
  2209 ;;		line 119 in file "DispLCD4vias.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  d               1    wreg     unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  d               1    2[COMMON] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       0       0       0       0
  2224 ;;      Locals:         1       0       0       0       0
  2225 ;;      Temps:          2       0       0       0       0
  2226 ;;      Totals:         3       0       0       0       0
  2227 ;;Total ram usage:        3 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_dispLCD
  2233 ;;		_dispLCD_num
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2237                           	line	119
  2238                           global __ptext7
  2239                           __ptext7:	;psect for function _dispLCD_dataReg
  2240  0650                     psect	text7
  2241                           	file	"DispLCD4vias.c"
  2242                           	line	119
  2243                           	global	__size_of_dispLCD_dataReg
  2244                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  2245  002F                     	
  2246                           _dispLCD_dataReg:	
  2247  0650                     ;incstack = 0
  2248                           	opt	stack 6
  2249                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  2250                           ;dispLCD_dataReg@d stored from wreg
  2251                           	movwf	(dispLCD_dataReg@d)
  2252  0650  00F2               	line	121
  2253                           	
  2254                           l707:	
  2255  0651                     ;DispLCD4vias.c: 119: void dispLCD_dataReg( unsigned char d );DispLCD4vias.c: 120: {;Dis
                                 pLCD4vias.c: 121:     LCDbits.RS = 1;
  2256                           	bcf	status, 5	;RP0=0, select bank0
  2257  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  2258  0652  1303               	bsf	(8),2	;volatile
  2259  0653  1508               	line	122
  2260                           	
  2261                           l709:	
  2262  0654                     ;DispLCD4vias.c: 122:     LCDbits.BUS = d >> 4;
  2263                           	movf	(dispLCD_dataReg@d),w
  2264  0654  0872               	movwf	(??_dispLCD_dataReg+0)+0
  2265  0655  00F0               	movlw	04h
  2266  0656  3004               u85:
  2267  0657                     	clrc
  2268  0657  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  2269  0658  0CF0               	addlw	-1
  2270  0659  3EFF               	skipz
  2271  065A  1D03               	goto	u85
  2272  065B  2E57               	movf	0+(??_dispLCD_dataReg+0)+0,w
  2273  065C  0870               	movwf	(??_dispLCD_dataReg+1)+0
  2274  065D  00F1               	swapf	(??_dispLCD_dataReg+1)+0,f
  2275  065E  0EF1               	movf	(8),w	;volatile
  2276  065F  0808               	xorwf	(??_dispLCD_dataReg+1)+0,w
  2277  0660  0671               	andlw	not (((1<<4)-1)<<4)
  2278  0661  390F               	xorwf	(??_dispLCD_dataReg+1)+0,w
  2279  0662  0671               	movwf	(8)	;volatile
  2280  0663  0088               	line	123
  2281                           	
  2282                           l711:	
  2283  0664                     ;DispLCD4vias.c: 123:     LCDbits.EN = 0;
  2284                           	bcf	(8),3	;volatile
  2285  0664  1188               	line	124
  2286                           	
  2287                           l713:	
  2288  0665                     ;DispLCD4vias.c: 124:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2289                           	opt asmopt_push
  2290                           opt asmopt_off
  2291                           	movlw	13
  2292  0665  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  2293  0666  00F0               	u567:
  2294  0667                     decfsz	(??_dispLCD_dataReg+0)+0,f
  2295  0667  0BF0               	goto	u567
  2296  0668  2E67               opt asmopt_pop
  2297                           
  2298                           	line	125
  2299                           	
  2300                           l715:	
  2301  0669                     ;DispLCD4vias.c: 125:     LCDbits.EN = 1;
  2302                           	bcf	status, 5	;RP0=0, select bank0
  2303  0669  1283               	bcf	status, 6	;RP1=0, select bank0
  2304  066A  1303               	bsf	(8),3	;volatile
  2305  066B  1588               	line	127
  2306                           	
  2307                           l717:	
  2308  066C                     ;DispLCD4vias.c: 127:     LCDbits.RS = 1;
  2309                           	bsf	(8),2	;volatile
  2310  066C  1508               	line	128
  2311                           	
  2312                           l719:	
  2313  066D                     ;DispLCD4vias.c: 128:     LCDbits.BUS = d & 0x0F;
  2314                           	movf	(dispLCD_dataReg@d),w
  2315  066D  0872               	andlw	0Fh
  2316  066E  390F               	movwf	(??_dispLCD_dataReg+0)+0
  2317  066F  00F0               	swapf	(??_dispLCD_dataReg+0)+0,f
  2318  0670  0EF0               	movf	(8),w	;volatile
  2319  0671  0808               	xorwf	(??_dispLCD_dataReg+0)+0,w
  2320  0672  0670               	andlw	not (((1<<4)-1)<<4)
  2321  0673  390F               	xorwf	(??_dispLCD_dataReg+0)+0,w
  2322  0674  0670               	movwf	(8)	;volatile
  2323  0675  0088               	line	129
  2324                           	
  2325                           l721:	
  2326  0676                     ;DispLCD4vias.c: 129:     LCDbits.EN = 0;
  2327                           	bcf	(8),3	;volatile
  2328  0676  1188               	line	130
  2329                           ;DispLCD4vias.c: 130:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2330                           	opt asmopt_push
  2331                           opt asmopt_off
  2332                           	movlw	13
  2333  0677  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  2334  0678  00F0               	u577:
  2335  0679                     decfsz	(??_dispLCD_dataReg+0)+0,f
  2336  0679  0BF0               	goto	u577
  2337  067A  2E79               opt asmopt_pop
  2338                           
  2339                           	line	131
  2340                           	
  2341                           l723:	
  2342  067B                     ;DispLCD4vias.c: 131:     LCDbits.EN = 1;
  2343                           	bcf	status, 5	;RP0=0, select bank0
  2344  067B  1283               	bcf	status, 6	;RP1=0, select bank0
  2345  067C  1303               	bsf	(8),3	;volatile
  2346  067D  1588               	line	132
  2347                           	
  2348                           l40:	
  2349  067E                     	return
  2350  067E  0008               	opt stack 0
  2351                           GLOBAL	__end_of_dispLCD_dataReg
  2352                           	__end_of_dispLCD_dataReg:
  2353  067F                     	signat	_dispLCD_dataReg,4217
  2354                           global	___latbits
  2355                           ___latbits	equ	2
  2356  0002                     	global	btemp
  2357                           	btemp set 07Eh
  2358  007E                     
  2359                           	DABS	1,126,2	;btemp
  2360                           	global	wtemp0
  2361                           	wtemp0 set btemp+0
  2362  007E                     	end


Data Sizes:
    Strings     15
    Constant    0
    Data        23
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     19      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), main@str(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_dispLCD
    _dispLCD_init->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    1184
                                              0 BANK0     19    19      0
                            _dispLCD
                       _dispLCD_init
                       _teclado_init
                       _teclado_scan
 ---------------------------------------------------------------------------------
 (1) _teclado_scan                                         3     3      0     205
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     120
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              6     3      3     763
                                              6 COMMON     6     3      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     316
                                              3 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_instReg                                      3     3      0     120
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispLCD
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_init
     _dispLCD_instReg
   _teclado_init
   _teclado_scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu May 06 16:49:10 2021

                       pc 0002               __CFG_CP$OFF 0000                        l30 078F  
                      l31 079E                        l15 06DC                        l40 067E  
                      l32 07C4                        l16 06F0                        l33 07E5  
                      l17 0708                        l50 068F                        l18 0709  
                      l35 07DB                        l43 0601                        l51 06B9  
                      l19 0709                        l36 07EA                        l28 0799  
                      l52 06B9                        l37 07ED                        l46 064F  
                      l49 06A8                        l81 05EE                        l90 076B  
                      l91 0760                        l92 076D                        l86 071A  
                      l87 073D                        l88 0732                        l89 0748  
                      u20 0788                        u21 0787                        u30 078E  
                      u31 078D                        u15 0775                        u40 07AA  
                      u41 07A9                        u60 07D4                        u61 07D3  
                      u70 07DA                        u71 07D9                        u55 07AE  
                      u85 0657   __end_of_dispLCD_dataReg 067F                        fsr 0004  
                     l701 07DB                       l711 0664                       l703 07E5  
                     l721 0676                       l713 0665                       l705 07EA  
                     l723 067B                       l715 0669                       l707 0651  
                     l731 05E4                       l717 066C                       l709 0654  
                     l733 05E7                       l901 06E6                       l719 066D  
                     l671 0788                       l727 062C                       l735 05EB  
                     l903 06EB                       l681 07AA                       l673 078F  
                     l665 076F                       l729 0637                       l905 06F0  
                     l683 07AB                       l691 07C4                       l675 0799  
                     l667 0772                       l843 05F0                       l851 0719  
                     l907 06FB                       l693 07C5                       l685 07BB  
                     l677 079E                       l669 0782                       l861 073D  
                     l853 071A                       l845 070C                       l695 07CE  
                     l687 07BC                       l679 07A1                       l871 0757  
                     l863 073F                       l855 0729                       l847 070D  
                     l697 07CF                       l689 07C0                       l881 0680  
                     l873 0760                       l865 0740                       l857 0732  
                     l849 0711                       l699 07D4                       l891 06A8  
                     l883 0684                       l875 0764                       l867 0747  
                     l859 0736                       l885 068F                       l877 076B  
                     l869 0748                       l893 06BA                       l887 069F  
                     l879 076D                       l895 06D1                       l889 06A3  
                     l897 06D6                       l899 06DC                       u310 0718  
                     u311 0717                       u400 06C4                       u305 05F3  
                     u330 0729                       u410 06EB                       u331 0728  
                     u411 06EA                       u340 073C                       u324 0720  
                     u341 073B                       u325 071E                       u350 0746  
                     u351 0745                       u370 0757              __CFG_CPD$OFF 0000  
                     u371 0756                       u380 076A                       u364 074E  
                     u517 0793                       u381 0769                       u365 074C  
                     u390 06B8                       u527 079B                       u391 06B7  
                     u537 07BE                       u547 07DF                       u557 07E7  
                     u567 0667                       u577 0679                       fsr0 0004  
                     indf 0000   __end_of_dispLCD_instReg 07EE              __CFG_LVP$OFF 0000  
                    STR_1 0013              __CFG_WRT$OFF 0000                      _main 06BA  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _PORTB 0006  
                   _TRISB 0086           __end_of_dispLCD 06BA            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E      __end_of_dispLCD_init 0650            __CFG_MCLRE$OFF 0000  
         __initialization 07EE              __end_of_main 070C          ?_dispLCD_dataReg 0070  
                  ??_main 0037          ?_dispLCD_instReg 0070                    _ANSELH 0189  
          __CFG_PWRTE$OFF 0000                    _tabela 002F                 ??_dispLCD 0079  
 __end_of__initialization 07FC   __size_of_dispLCD_lincol 0013            __pcstackCOMMON 0070  
            __pidataBANK0 0615     __size_of_dispLCD_init 0024             ?_teclado_init 0070  
           ?_teclado_scan 0070                __pmaintext 06BA                   _LCDbits 0008  
            _dispLCD_init 062C                __stringtab 0003            ??_teclado_init 0070  
          ??_teclado_scan 0070                   _dispLCD 067F                   __ptext1 070C  
                 __ptext2 05E4                   __ptext3 062C                   __ptext4 067F  
                 __ptext5 05EF                   __ptext6 076E                   __ptext7 0650  
           teclado_scan@i 0072                   main@str 003B      end_of_initialization 07FC  
          _dispLCD_lincol 05EF                dispLCD@col 0076                dispLCD@lin 007B  
              dispLCD@pos 007A                dispLCD@str 0077                 _TRISDbits 0088  
__size_of_dispLCD_dataReg 002F    __end_of_dispLCD_lincol 0602  __size_of_dispLCD_instReg 0080  
    __end_of_teclado_init 05EF      __end_of_teclado_scan 076E       start_initialization 07EE  
         ?_dispLCD_lincol 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000         dispLCD_lincol@col 0073  
       dispLCD_lincol@lin 0075                init_fetch0 0602               __pdataBANK0 0020  
               ___latbits 0002             __pcstackBANK0 0037         ??_dispLCD_dataReg 0070  
       ??_dispLCD_instReg 0070                  ?_dispLCD 0076                 __pstrings 0003  
       teclado_scan@tecla 0071     __size_of_teclado_init 000B                 main@F1287 0020  
   __size_of_teclado_scan 0062          dispLCD_dataReg@d 0072               __stringbase 0012  
            _teclado_init 05E4              _teclado_scan 070C          dispLCD_instReg@i 0072  
      __end_of__stringtab 0013          __size_of_dispLCD 003B          ??_dispLCD_lincol 0074  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0052             ?_dispLCD_init 0070  
         _dispLCD_dataReg 0650                  init_ram0 0606           _dispLCD_instReg 076E  
               stringcode 000D            ??_dispLCD_init 0073                  stringdir 000D  
                stringtab 0003  
