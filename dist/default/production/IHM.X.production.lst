

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri May 14 14:10:33 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_dispLCD
   712                           	FNCALL	_main,_dispLCD_init
   713                           	FNCALL	_main,_teclado_init
   714                           	FNCALL	_main,_teclado_scan
   715                           	FNCALL	_dispLCD_init,_dispLCD_instReg
   716                           	FNCALL	_dispLCD,_dispLCD_dataReg
   717                           	FNCALL	_dispLCD,_dispLCD_lincol
   718                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
   719                           	FNROOT	_main
   720                           	global	_tabela
   721                           	global	main@F1287
   722                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   723                           global __pidataBANK0
   724                           __pidataBANK0:
   725  0611                     	file	"teclado.c"
   726                           	line	30
   727                           
   728                           ;initializer for _tabela
   729                           	retlw	031h
   730  0611  3431               	retlw	032h
   731  0612  3432               	retlw	033h
   732  0613  3433               	retlw	041h
   733  0614  3441               	retlw	034h
   734  0615  3434               	retlw	035h
   735  0616  3435               	retlw	036h
   736  0617  3436               	retlw	042h
   737  0618  3442               	retlw	037h
   738  0619  3437               	retlw	038h
   739  061A  3438               	retlw	039h
   740  061B  3439               	retlw	043h
   741  061C  3443               	retlw	02Ah
   742  061D  342A               	retlw	030h
   743  061E  3430               	retlw	023h
   744  061F  3423               	retlw	044h
   745  0620  3444               	file	"main.c"
   746                           	line	16
   747                           
   748                           ;initializer for main@F1287
   749                           	retlw	054h
   750  0621  3454               	retlw	065h
   751  0622  3465               	retlw	063h
   752  0623  3463               	retlw	06Ch
   753  0624  346C               	retlw	061h
   754  0625  3461               	retlw	03Ah
   755  0626  343A               	retlw	020h
   756  0627  3420               	retlw	020h
   757  0628  3420               	retlw	020h
   758  0629  3420               	retlw	020h
   759  062A  3420               	retlw	020h
   760  062B  3420               	retlw	020h
   761  062C  3420               	retlw	020h
   762  062D  3420               	retlw	020h
   763  062E  3420               	retlw	low(0)
   764  062F  3400               	global	_PORTB
   765                           _PORTB	set	0x6
   766  0006                     	global	_LCDbits
   767                           _LCDbits	set	8
   768  0008                     	global	_TRISB
   769                           _TRISB	set	0x86
   770  0086                     	global	_TRISDbits
   771                           _TRISDbits	set	0x88
   772  0088                     	global	_ANSELH
   773                           _ANSELH	set	0x189
   774  0189                     psect	strings,class=STRING,delta=2,noexec
   775                           global __pstrings
   776                           __pstrings:
   777  0003                     stringtab:
   778  0003                     	global    __stringtab
   779                           __stringtab:
   780  0003                     ;	String table - string pointers are 1 byte each
   781                           	btfsc	(btemp+1),7
   782  0003  1BFF               	ljmp	stringcode
   783  0004  280D               	bcf	status,7
   784  0005  1383               	btfsc	(btemp+1),0
   785  0006  187F               	bsf	status,7
   786  0007  1783               	movf	indf,w
   787  0008  0800               	incf fsr
   788  0009  0A84               skipnz
   789  000A  1903               incf btemp+1
   790  000B  0AFF               	return
   791  000C  0008               stringcode:stringdir:
   792  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
   793  000D  3000               movwf pclath
   794  000E  008A               movf fsr,w
   795  000F  0804               incf fsr
   796  0010  0A84               	addwf pc
   797  0011  0782               	global __stringbase
   798                           __stringbase:
   799  0012                     	retlw	0
   800  0012  3400               psect	strings
   801                           	global    __end_of__stringtab
   802                           __end_of__stringtab:
   803  0013                     	
   804                           STR_1:	
   805  0013                     	retlw	84	;'T'
   806  0013  3454               	retlw	101	;'e'
   807  0014  3465               	retlw	114	;'r'
   808  0015  3472               	retlw	116	;'t'
   809  0016  3474               	retlw	111	;'o'
   810  0017  346F               	retlw	115	;'s'
   811  0018  3473               	retlw	32	;' '
   812  0019  3420               	retlw	112	;'p'
   813  001A  3470               	retlw	114	;'r'
   814  001B  3472               	retlw	111	;'o'
   815  001C  346F               	retlw	106	;'j'
   816  001D  346A               	retlw	101	;'e'
   817  001E  3465               	retlw	99	;'c'
   818  001F  3463               	retlw	116	;'t'
   819  0020  3474               	retlw	0
   820  0021  3400               psect	strings
   821                           ; #config settings
   822                           global __CFG_FOSC$INTRC_NOCLKOUT
   823                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   824  0000                     global __CFG_WDTE$OFF
   825                           __CFG_WDTE$OFF equ 0x0
   826  0000                     global __CFG_PWRTE$OFF
   827                           __CFG_PWRTE$OFF equ 0x0
   828  0000                     global __CFG_MCLRE$OFF
   829                           __CFG_MCLRE$OFF equ 0x0
   830  0000                     global __CFG_CP$OFF
   831                           __CFG_CP$OFF equ 0x0
   832  0000                     global __CFG_CPD$OFF
   833                           __CFG_CPD$OFF equ 0x0
   834  0000                     global __CFG_BOREN$OFF
   835                           __CFG_BOREN$OFF equ 0x0
   836  0000                     global __CFG_IESO$OFF
   837                           __CFG_IESO$OFF equ 0x0
   838  0000                     global __CFG_FCMEN$OFF
   839                           __CFG_FCMEN$OFF equ 0x0
   840  0000                     global __CFG_LVP$OFF
   841                           __CFG_LVP$OFF equ 0x0
   842  0000                     global __CFG_BOR4V$BOR40V
   843                           __CFG_BOR4V$BOR40V equ 0x0
   844  0000                     global __CFG_WRT$OFF
   845                           __CFG_WRT$OFF equ 0x0
   846  0000                     	file	"C:\Users\20185087\AppData\Local\Temp\sfjg."
   847                           	line	#
   848                           psect cinit,class=CODE,delta=2
   849                           global start_initialization
   850                           start_initialization:
   851  07EE                     
   852                           global __initialization
   853                           __initialization:
   854  07EE                     psect	dataBANK0,class=BANK0,space=1,noexec
   855                           global __pdataBANK0
   856                           __pdataBANK0:
   857  0020                     	file	"teclado.c"
   858                           	line	30
   859                           _tabela:
   860  0020                            ds      16
   861  0020                     
   862                           psect	dataBANK0
   863                           	file	"main.c"
   864                           	line	16
   865                           main@F1287:
   866  0030                            ds      15
   867  0030                     
   868                           	file	"C:\Users\20185087\AppData\Local\Temp\sfjg."
   869                           	line	#
   870                           global btemp
   871                           psect inittext,class=CODE,delta=2
   872                           global init_fetch0,btemp
   873                           ;	Called with low address in FSR and high address in W
   874                           init_fetch0:
   875  05FE                     	movf btemp,w
   876  05FE  087E               	movwf pclath
   877  05FF  008A               	movf btemp+1,w
   878  0600  087F               	movwf pc
   879  0601  0082               global init_ram0
   880                           ;Called with:
   881                           ;	high address of idata address in btemp 
   882                           ;	low address of idata address in btemp+1 
   883                           ;	low address of data in FSR
   884                           ;	high address + 1 of data in btemp-1
   885                           init_ram0:
   886  0602                     	fcall init_fetch0
   887  0602  120A  118A  25FE  120A  118A  	movwf indf,f
   888  0607  0080               	incf fsr,f
   889  0608  0A84               	movf fsr,w
   890  0609  0804               	xorwf btemp-1,w
   891  060A  067D               	btfsc status,2
   892  060B  1903               	retlw 0
   893  060C  3400               	incf btemp+1,f
   894  060D  0AFF               	btfsc status,2
   895  060E  1903               	incf btemp,f
   896  060F  0AFE               	goto init_ram0
   897  0610  2E02               ; Initialize objects allocated to BANK0
   898                           psect cinit,class=CODE,delta=2,merge=1
   899                           global init_ram0, __pidataBANK0
   900                           	bcf	status, 7	;select IRP bank0
   901  07EE  1383               	movlw low(__pdataBANK0+31)
   902  07EF  303F               	movwf btemp-1,f
   903  07F0  00FD               	movlw high(__pidataBANK0)
   904  07F1  3006               	movwf btemp,f
   905  07F2  00FE               	movlw low(__pidataBANK0)
   906  07F3  3011               	movwf btemp+1,f
   907  07F4  00FF               	movlw low(__pdataBANK0)
   908  07F5  3020               	movwf fsr,f
   909  07F6  0084               	fcall init_ram0
   910  07F7  120A  118A  2602  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   911                           global end_of_initialization,__end_of__initialization
   912                           
   913                           ;End of C runtime variable initialization code
   914                           
   915                           end_of_initialization:
   916  07FC                     __end_of__initialization:
   917  07FC                     clrf status
   918  07FC  0183               ljmp _main	;jump to C main() function
   919  07FD  120A  118A  2EBE   psect	cstackCOMMON,class=COMMON,space=1,noexec
   920                           global __pcstackCOMMON
   921                           __pcstackCOMMON:
   922  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
   923  0070                     ?_teclado_init:	; 1 bytes @ 0x0
   924  0070                     ??_teclado_init:	; 1 bytes @ 0x0
   925  0070                     ?_teclado_scan:	; 1 bytes @ 0x0
   926  0070                     ??_teclado_scan:	; 1 bytes @ 0x0
   927  0070                     ?_main:	; 1 bytes @ 0x0
   928  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
   929  0070                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
   930  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
   931  0070                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
   932  0070                     	ds	2
   933  0070                     	global	dispLCD_instReg@i
   934                           dispLCD_instReg@i:	; 1 bytes @ 0x2
   935  0072                     	global	dispLCD_dataReg@d
   936                           dispLCD_dataReg@d:	; 1 bytes @ 0x2
   937  0072                     	ds	1
   938  0072                     ??_dispLCD_init:	; 1 bytes @ 0x3
   939  0073                     ?_dispLCD_lincol:	; 1 bytes @ 0x3
   940  0073                     	global	dispLCD_lincol@col
   941                           dispLCD_lincol@col:	; 1 bytes @ 0x3
   942  0073                     	ds	1
   943  0073                     ??_dispLCD_lincol:	; 1 bytes @ 0x4
   944  0074                     	global	teclado_scan@tecla
   945                           teclado_scan@tecla:	; 1 bytes @ 0x4
   946  0074                     	ds	1
   947  0074                     	global	dispLCD_lincol@lin
   948                           dispLCD_lincol@lin:	; 1 bytes @ 0x5
   949  0075                     	global	teclado_scan@col
   950                           teclado_scan@col:	; 1 bytes @ 0x5
   951  0075                     	ds	1
   952  0075                     ?_dispLCD:	; 1 bytes @ 0x6
   953  0076                     	global	dispLCD@col
   954                           dispLCD@col:	; 1 bytes @ 0x6
   955  0076                     	global	teclado_scan@lin
   956                           teclado_scan@lin:	; 1 bytes @ 0x6
   957  0076                     	ds	1
   958  0076                     	global	dispLCD@str
   959                           dispLCD@str:	; 2 bytes @ 0x7
   960  0077                     	ds	2
   961  0077                     ??_dispLCD:	; 1 bytes @ 0x9
   962  0079                     	ds	1
   963  0079                     	global	dispLCD@pos
   964                           dispLCD@pos:	; 1 bytes @ 0xA
   965  007A                     	ds	1
   966  007A                     	global	dispLCD@lin
   967                           dispLCD@lin:	; 1 bytes @ 0xB
   968  007B                     	ds	1
   969  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
   970                           global __pcstackBANK0
   971                           __pcstackBANK0:
   972  003F                     ??_main:	; 1 bytes @ 0x0
   973  003F                     	ds	4
   974  003F                     	global	main@str
   975                           main@str:	; 15 bytes @ 0x4
   976  0043                     	ds	15
   977  0043                     ;!
   978                           ;!Data Sizes:
   979                           ;!    Strings     15
   980                           ;!    Constant    0
   981                           ;!    Data        31
   982                           ;!    BSS         0
   983                           ;!    Persistent  0
   984                           ;!    Stack       0
   985                           ;!
   986                           ;!Auto Spaces:
   987                           ;!    Space          Size  Autos    Used
   988                           ;!    COMMON           14     12      12
   989                           ;!    BANK0            80     19      50
   990                           ;!    BANK1            80      0       0
   991                           ;!    BANK3            96      0       0
   992                           ;!    BANK2            96      0       0
   993                           
   994                           ;!
   995                           ;!Pointer List with Targets:
   996                           ;!
   997                           ;!    dispLCD@str	PTR const unsigned char  size(2) Largest target is 15
   998                           ;!		 -> STR_1(CODE[15]), main@str(BANK0[15]), 
   999                           ;!
  1000                           
  1001                           
  1002                           ;!
  1003                           ;!Critical Paths under _main in COMMON
  1004                           ;!
  1005                           ;!    _main->_dispLCD
  1006                           ;!    _dispLCD_init->_dispLCD_instReg
  1007                           ;!    _dispLCD->_dispLCD_lincol
  1008                           ;!    _dispLCD_lincol->_dispLCD_instReg
  1009                           ;!
  1010                           ;!Critical Paths under _main in BANK0
  1011                           ;!
  1012                           ;!    None.
  1013                           ;!
  1014                           ;!Critical Paths under _main in BANK1
  1015                           ;!
  1016                           ;!    None.
  1017                           ;!
  1018                           ;!Critical Paths under _main in BANK3
  1019                           ;!
  1020                           ;!    None.
  1021                           ;!
  1022                           ;!Critical Paths under _main in BANK2
  1023                           ;!
  1024                           ;!    None.
  1025                           
  1026 ;;
  1027 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1028 ;;
  1029                           
  1030                           ;!
  1031                           ;!Call Graph Tables:
  1032                           ;!
  1033                           ;! ---------------------------------------------------------------------------------
  1034                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1035                           ;! ---------------------------------------------------------------------------------
  1036                           ;! (0) _main                                                19    19      0    1114
  1037                           ;!                                              0 BANK0     19    19      0
  1038                           ;!                            _dispLCD
  1039                           ;!                       _dispLCD_init
  1040                           ;!                       _teclado_init
  1041                           ;!                       _teclado_scan
  1042                           ;! ---------------------------------------------------------------------------------
  1043                           ;! (1) _teclado_scan                                         7     7      0     135
  1044                           ;!                                              0 COMMON     7     7      0
  1045                           ;! ---------------------------------------------------------------------------------
  1046                           ;! (1) _teclado_init                                         0     0      0       0
  1047                           ;! ---------------------------------------------------------------------------------
  1048                           ;! (1) _dispLCD_init                                         0     0      0     120
  1049                           ;!                    _dispLCD_instReg
  1050                           ;! ---------------------------------------------------------------------------------
  1051                           ;! (1) _dispLCD                                              6     3      3     763
  1052                           ;!                                              6 COMMON     6     3      3
  1053                           ;!                    _dispLCD_dataReg
  1054                           ;!                     _dispLCD_lincol
  1055                           ;! ---------------------------------------------------------------------------------
  1056                           ;! (2) _dispLCD_lincol                                       3     2      1     316
  1057                           ;!                                              3 COMMON     3     2      1
  1058                           ;!                    _dispLCD_instReg
  1059                           ;! ---------------------------------------------------------------------------------
  1060                           ;! (2) _dispLCD_instReg                                      3     3      0     120
  1061                           ;!                                              0 COMMON     3     3      0
  1062                           ;! ---------------------------------------------------------------------------------
  1063                           ;! (2) _dispLCD_dataReg                                      3     3      0      30
  1064                           ;!                                              0 COMMON     3     3      0
  1065                           ;! ---------------------------------------------------------------------------------
  1066                           ;! Estimated maximum stack depth 2
  1067                           ;! ---------------------------------------------------------------------------------
  1068                           ;!
  1069                           ;! Call Graph Graphs:
  1070                           ;!
  1071                           ;! _main (ROOT)
  1072                           ;!   _dispLCD
  1073                           ;!     _dispLCD_dataReg
  1074                           ;!     _dispLCD_lincol
  1075                           ;!       _dispLCD_instReg
  1076                           ;!   _dispLCD_init
  1077                           ;!     _dispLCD_instReg
  1078                           ;!   _teclado_init
  1079                           ;!   _teclado_scan
  1080                           ;!
  1081                           
  1082                           ;! Address spaces:
  1083                           
  1084                           ;!Name               Size   Autos  Total    Cost      Usage
  1085                           ;!BANK3               60      0       0       9        0.0%
  1086                           ;!BITBANK3            60      0       0       8        0.0%
  1087                           ;!SFR3                 0      0       0       4        0.0%
  1088                           ;!BITSFR3              0      0       0       4        0.0%
  1089                           ;!BANK2               60      0       0      11        0.0%
  1090                           ;!BITBANK2            60      0       0      10        0.0%
  1091                           ;!SFR2                 0      0       0       5        0.0%
  1092                           ;!BITSFR2              0      0       0       5        0.0%
  1093                           ;!BANK1               50      0       0       7        0.0%
  1094                           ;!BITBANK1            50      0       0       6        0.0%
  1095                           ;!SFR1                 0      0       0       2        0.0%
  1096                           ;!BITSFR1              0      0       0       2        0.0%
  1097                           ;!BANK0               50     13      32       5       62.5%
  1098                           ;!BITBANK0            50      0       0       4        0.0%
  1099                           ;!SFR0                 0      0       0       1        0.0%
  1100                           ;!BITSFR0              0      0       0       1        0.0%
  1101                           ;!COMMON               E      C       C       1       85.7%
  1102                           ;!BITCOMMON            E      0       0       0        0.0%
  1103                           ;!CODE                 0      0       0       0        0.0%
  1104                           ;!DATA                 0      0      3E      12        0.0%
  1105                           ;!ABS                  0      0      3E       3        0.0%
  1106                           ;!NULL                 0      0       0       0        0.0%
  1107                           ;!STACK                0      0       0       2        0.0%
  1108                           ;!EEDATA             100      0       0       0        0.0%
  1109                           
  1110                           	global	_main
  1111                           
  1112 ;; *************** function _main *****************
  1113 ;; Defined at:
  1114 ;;		line 15 in file "main.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;  str            15    4[BANK0 ] unsigned char [15]
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1123 ;; Tracked objects:
  1124 ;;		On entry : B00/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0      15       0       0       0
  1130 ;;      Temps:          0       4       0       0       0
  1131 ;;      Totals:         0      19       0       0       0
  1132 ;;Total ram usage:       19 bytes
  1133 ;; Hardware stack levels required when called:    3
  1134 ;; This function calls:
  1135 ;;		_dispLCD
  1136 ;;		_dispLCD_init
  1137 ;;		_teclado_init
  1138 ;;		_teclado_scan
  1139 ;; This function is called by:
  1140 ;;		Startup code after reset
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1144                           	file	"main.c"
  1145                           	line	15
  1146                           global __pmaintext
  1147                           __pmaintext:	;psect for function _main
  1148  06BE                     psect	maintext
  1149                           	file	"main.c"
  1150                           	line	15
  1151                           	global	__size_of_main
  1152                           	__size_of_main	equ	__end_of_main-_main
  1153  0052                     	
  1154                           _main:	
  1155  06BE                     ;incstack = 0
  1156                           	opt	stack 5
  1157                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1158                           	line	17
  1159                           	
  1160                           l850:	
  1161  06BE                     ;main.c: 17:     char str[] = "Tecla:        ";
  1162                           	movlw	(main@str)&0ffh
  1163  06BE  3043               	movwf	fsr0
  1164  06BF  0084               	movlw	low(main@F1287)
  1165  06C0  3030               	bcf	status, 5	;RP0=0, select bank0
  1166  06C1  1283               	bcf	status, 6	;RP1=0, select bank0
  1167  06C2  1303               	movwf	(??_main+0)+0
  1168  06C3  00BF               	movf	fsr0,w
  1169  06C4  0804               	movwf	((??_main+0)+0+1)
  1170  06C5  00C0               	movlw	15
  1171  06C6  300F               	movwf	((??_main+0)+0+2)
  1172  06C7  00C1               u320:
  1173  06C8                     	movf	(??_main+0)+0,w
  1174  06C8  083F               	movwf	fsr0
  1175  06C9  0084               	bcf	status, 7	;select IRP bank0
  1176  06CA  1383               	
  1177                           	movf	indf,w
  1178  06CB  0800               	movwf	((??_main+0)+0+3)
  1179  06CC  00C2               	incf	(??_main+0)+0,f
  1180  06CD  0ABF               	movf	((??_main+0)+0+1),w
  1181  06CE  0840               	movwf	fsr0
  1182  06CF  0084               	
  1183                           	movf	((??_main+0)+0+3),w
  1184  06D0  0842               	movwf	indf
  1185  06D1  0080               	incf	((??_main+0)+0+1),f
  1186  06D2  0AC0               	decfsz	((??_main+0)+0+2),f
  1187  06D3  0BC1               	goto	u320
  1188  06D4  2EC8               	
  1189                           	line	18
  1190                           	
  1191                           l852:	
  1192  06D5                     ;main.c: 18:         dispLCD_init();
  1193                           	fcall	_dispLCD_init
  1194  06D5  120A  118A  2630  120A  118A  	line	19
  1195                           	
  1196                           l854:	
  1197  06DA                     ;main.c: 19:         teclado_init();
  1198                           	fcall	_teclado_init
  1199  06DA  120A  118A  25E0  120A  118A  	goto	l856
  1200  06DF  2EE0               	line	21
  1201                           ;main.c: 21:          while( 1 )
  1202                           	
  1203                           l15:	
  1204  06E0                     	line	23
  1205                           	
  1206                           l856:	
  1207  06E0                     ;main.c: 22:     {;main.c: 23:         str[7] = teclado_scan();
  1208                           	fcall	_teclado_scan
  1209  06E0  120A  118A  2710  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1210  06E5  1283               	bcf	status, 6	;RP1=0, select bank0
  1211  06E6  1303               	movwf	(??_main+0)+0
  1212  06E7  00BF               	movf	(??_main+0)+0,w
  1213  06E8  083F               	movwf	0+(main@str)+07h
  1214  06E9  00CA               	line	24
  1215                           	
  1216                           l858:	
  1217  06EA                     ;main.c: 24:         if(str[7] == 0)
  1218                           	movf	(0+(main@str)+07h),w
  1219  06EA  084A               	btfss	status,2
  1220  06EB  1D03               	goto	u331
  1221  06EC  2EEE               	goto	u330
  1222  06ED  2EEF               u331:
  1223  06EE                     	goto	l862
  1224  06EE  2EF4               u330:
  1225  06EF                     	line	25
  1226                           	
  1227                           l860:	
  1228  06EF                     ;main.c: 25:            str[7] = ' ';
  1229                           	movlw	low(020h)
  1230  06EF  3020               	movwf	(??_main+0)+0
  1231  06F0  00BF               	movf	(??_main+0)+0,w
  1232  06F1  083F               	movwf	0+(main@str)+07h
  1233  06F2  00CA               	goto	l862
  1234  06F3  2EF4               	
  1235                           l16:	
  1236  06F4                     	line	26
  1237                           	
  1238                           l862:	
  1239  06F4                     ;main.c: 26:            dispLCD(1,0,str);
  1240                           	clrf	(dispLCD@col)
  1241  06F4  01F6               	movlw	(low(main@str|((0x0)<<8))&0ffh)
  1242  06F5  3043               	movwf	(dispLCD@str)
  1243  06F6  00F7               	movlw	(0x0)
  1244  06F7  3000               	movwf	(dispLCD@str+1)
  1245  06F8  00F8               	movlw	low(01h)
  1246  06F9  3001               	fcall	_dispLCD
  1247  06FA  120A  118A  2683  120A  118A  	line	27
  1248                           	
  1249                           l864:	
  1250  06FF                     ;main.c: 27:         dispLCD(0,1, "Tertos project");
  1251                           	clrf	(dispLCD@col)
  1252  06FF  01F6               	incf	(dispLCD@col),f
  1253  0700  0AF6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1254  0701  3001               	movwf	(dispLCD@str)
  1255  0702  00F7               	movlw	80h
  1256  0703  3080               	movwf	(dispLCD@str+1)
  1257  0704  00F8               	movlw	low(0)
  1258  0705  3000               	fcall	_dispLCD
  1259  0706  120A  118A  2683  120A  118A  	goto	l856
  1260  070B  2EE0               	line	29
  1261                           ;main.c: 29:     }
  1262                           	
  1263                           l17:	
  1264  070C                     	goto	l856
  1265  070C  2EE0               	
  1266                           l18:	
  1267  070D                     	line	31
  1268                           ;main.c: 30:     return;
  1269                           	
  1270                           l19:	
  1271  070D                     	global	start
  1272                           	ljmp	start
  1273  070D  120A  118A  2800   	opt stack 0
  1274                           GLOBAL	__end_of_main
  1275                           	__end_of_main:
  1276  0710                     	signat	_main,89
  1277                           	global	_teclado_scan
  1278                           
  1279 ;; *************** function _teclado_scan *****************
  1280 ;; Defined at:
  1281 ;;		line 36 in file "teclado.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  lin             1    6[COMMON] unsigned char 
  1286 ;;  col             1    5[COMMON] unsigned char 
  1287 ;;  tecla           1    4[COMMON] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      unsigned char 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1297 ;;      Params:         0       0       0       0       0
  1298 ;;      Locals:         3       0       0       0       0
  1299 ;;      Temps:          4       0       0       0       0
  1300 ;;      Totals:         7       0       0       0       0
  1301 ;;Total ram usage:        7 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1310                           	file	"teclado.c"
  1311                           	line	36
  1312                           global __ptext1
  1313                           __ptext1:	;psect for function _teclado_scan
  1314  0710                     psect	text1
  1315                           	file	"teclado.c"
  1316                           	line	36
  1317                           	global	__size_of_teclado_scan
  1318                           	__size_of_teclado_scan	equ	__end_of_teclado_scan-_teclado_scan
  1319  005E                     	
  1320                           _teclado_scan:	
  1321  0710                     ;incstack = 0
  1322                           	opt	stack 7
  1323                           ; Regs used in _teclado_scan: [wreg-fsr0h+status,2+status,0]
  1324                           	line	39
  1325                           	
  1326                           l736:	
  1327  0710                     ;teclado.c: 39:     char tecla = 0;
  1328                           	clrf	(teclado_scan@tecla)
  1329  0710  01F4               	line	43
  1330                           ;teclado.c: 40:     char col, lin;;teclado.c: 43:     for( lin=0; lin<4; lin++)
  1331                           	clrf	(teclado_scan@lin)
  1332  0711  01F6               	
  1333                           l738:	
  1334  0712                     	movlw	low(04h)
  1335  0712  3004               	subwf	(teclado_scan@lin),w
  1336  0713  0276               	skipc
  1337  0714  1C03               	goto	u101
  1338  0715  2F17               	goto	u100
  1339  0716  2F18               u101:
  1340  0717                     	goto	l742
  1341  0717  2F1A               u100:
  1342  0718                     	goto	l762
  1343  0718  2F6B               	
  1344                           l740:	
  1345  0719                     	goto	l762
  1346  0719  2F6B               	
  1347                           l86:	
  1348  071A                     	line	45
  1349                           	
  1350                           l742:	
  1351  071A                     ;teclado.c: 44:     {;teclado.c: 45:         PORTB = 0x01<<lin;
  1352                           	movlw	low(01h)
  1353  071A  3001               	movwf	(??_teclado_scan+0)+0
  1354  071B  00F0               	incf	(teclado_scan@lin),w
  1355  071C  0A76               	goto	u114
  1356  071D  2F20               u115:
  1357  071E                     	clrc
  1358  071E  1003               	rlf	(??_teclado_scan+0)+0,f
  1359  071F  0DF0               u114:
  1360  0720                     	addlw	-1
  1361  0720  3EFF               	skipz
  1362  0721  1D03               	goto	u115
  1363  0722  2F1E               	movf	0+(??_teclado_scan+0)+0,w
  1364  0723  0870               	bcf	status, 5	;RP0=0, select bank0
  1365  0724  1283               	bcf	status, 6	;RP1=0, select bank0
  1366  0725  1303               	movwf	(6)	;volatile
  1367  0726  0086               	line	46
  1368                           	
  1369                           l744:	
  1370  0727                     ;teclado.c: 46:          for( col=0; col<4; col++ )
  1371                           	clrf	(teclado_scan@col)
  1372  0727  01F5               	
  1373                           l746:	
  1374  0728                     	movlw	low(04h)
  1375  0728  3004               	subwf	(teclado_scan@col),w
  1376  0729  0275               	skipc
  1377  072A  1C03               	goto	u121
  1378  072B  2F2D               	goto	u120
  1379  072C  2F2E               u121:
  1380  072D                     	goto	l750
  1381  072D  2F30               u120:
  1382  072E                     	goto	l758
  1383  072E  2F60               	
  1384                           l748:	
  1385  072F                     	goto	l758
  1386  072F  2F60               	
  1387                           l88:	
  1388  0730                     	line	47
  1389                           	
  1390                           l750:	
  1391  0730                     ;teclado.c: 47:         { if( PORTB & 0x10<<col ) tecla = tabela [lin][col]; }
  1392                           	movlw	low(010h)
  1393  0730  3010               	movwf	(??_teclado_scan+0)+0
  1394  0731  00F0               	incf	(teclado_scan@col),w
  1395  0732  0A75               	goto	u134
  1396  0733  2F36               u135:
  1397  0734                     	clrc
  1398  0734  1003               	rlf	(??_teclado_scan+0)+0,f
  1399  0735  0DF0               u134:
  1400  0736                     	addlw	-1
  1401  0736  3EFF               	skipz
  1402  0737  1D03               	goto	u135
  1403  0738  2F34               	movf	0+(??_teclado_scan+0)+0,w
  1404  0739  0870               	andwf	(6),w	;volatile
  1405  073A  0506               	btfsc	status,2
  1406  073B  1903               	goto	u141
  1407  073C  2F3E               	goto	u140
  1408  073D  2F3F               u141:
  1409  073E                     	goto	l754
  1410  073E  2F55               u140:
  1411  073F                     	
  1412                           l752:	
  1413  073F                     	movf	(teclado_scan@lin),w
  1414  073F  0876               	movwf	(??_teclado_scan+0)+0
  1415  0740  00F0               	movlw	02h
  1416  0741  3002               u155:
  1417  0742                     	clrc
  1418  0742  1003               	rlf	(??_teclado_scan+0)+0,f
  1419  0743  0DF0               	addlw	-1
  1420  0744  3EFF               	skipz
  1421  0745  1D03               	goto	u155
  1422  0746  2F42               	movlw	(low(_tabela|((0x0)<<8)))&0ffh
  1423  0747  3020               	addwf	0+(??_teclado_scan+0)+0,w
  1424  0748  0770               	movwf	(??_teclado_scan+1)+0
  1425  0749  00F1               	movf	(teclado_scan@col),w
  1426  074A  0875               	addwf	0+(??_teclado_scan+1)+0,w
  1427  074B  0771               	movwf	(??_teclado_scan+2)+0
  1428  074C  00F2               	movf	0+(??_teclado_scan+2)+0,w
  1429  074D  0872               	movwf	fsr0
  1430  074E  0084               	bcf	status, 7	;select IRP bank0
  1431  074F  1383               	movf	indf,w
  1432  0750  0800               	movwf	(??_teclado_scan+3)+0
  1433  0751  00F3               	movf	(??_teclado_scan+3)+0,w
  1434  0752  0873               	movwf	(teclado_scan@tecla)
  1435  0753  00F4               	goto	l754
  1436  0754  2F55               	
  1437                           l90:	
  1438  0755                     	
  1439                           l754:	
  1440  0755                     	movlw	low(01h)
  1441  0755  3001               	movwf	(??_teclado_scan+0)+0
  1442  0756  00F0               	movf	(??_teclado_scan+0)+0,w
  1443  0757  0870               	addwf	(teclado_scan@col),f
  1444  0758  07F5               	
  1445                           l756:	
  1446  0759                     	movlw	low(04h)
  1447  0759  3004               	subwf	(teclado_scan@col),w
  1448  075A  0275               	skipc
  1449  075B  1C03               	goto	u161
  1450  075C  2F5E               	goto	u160
  1451  075D  2F5F               u161:
  1452  075E                     	goto	l750
  1453  075E  2F30               u160:
  1454  075F                     	goto	l758
  1455  075F  2F60               	
  1456                           l89:	
  1457  0760                     	line	48
  1458                           	
  1459                           l758:	
  1460  0760                     ;teclado.c: 48:     }
  1461                           	movlw	low(01h)
  1462  0760  3001               	movwf	(??_teclado_scan+0)+0
  1463  0761  00F0               	movf	(??_teclado_scan+0)+0,w
  1464  0762  0870               	addwf	(teclado_scan@lin),f
  1465  0763  07F6               	
  1466                           l760:	
  1467  0764                     	movlw	low(04h)
  1468  0764  3004               	subwf	(teclado_scan@lin),w
  1469  0765  0276               	skipc
  1470  0766  1C03               	goto	u171
  1471  0767  2F69               	goto	u170
  1472  0768  2F6A               u171:
  1473  0769                     	goto	l742
  1474  0769  2F1A               u170:
  1475  076A                     	goto	l762
  1476  076A  2F6B               	
  1477                           l87:	
  1478  076B                     	line	51
  1479                           	
  1480                           l762:	
  1481  076B                     ;teclado.c: 51:     return(tecla);
  1482                           	movf	(teclado_scan@tecla),w
  1483  076B  0874               	goto	l91
  1484  076C  2F6D               	
  1485                           l764:	
  1486  076D                     	line	52
  1487                           	
  1488                           l91:	
  1489  076D                     	return
  1490  076D  0008               	opt stack 0
  1491                           GLOBAL	__end_of_teclado_scan
  1492                           	__end_of_teclado_scan:
  1493  076E                     	signat	_teclado_scan,89
  1494                           	global	_teclado_init
  1495                           
  1496 ;; *************** function _teclado_init *****************
  1497 ;; Defined at:
  1498 ;;		line 22 in file "teclado.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1525                           	line	22
  1526                           global __ptext2
  1527                           __ptext2:	;psect for function _teclado_init
  1528  05E0                     psect	text2
  1529                           	file	"teclado.c"
  1530                           	line	22
  1531                           	global	__size_of_teclado_init
  1532                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  1533  000B                     	
  1534                           _teclado_init:	
  1535  05E0                     ;incstack = 0
  1536                           	opt	stack 7
  1537                           ; Regs used in _teclado_init: [wreg+status,2]
  1538                           	line	24
  1539                           	
  1540                           l730:	
  1541  05E0                     ;teclado.c: 24:     ANSELH = 0;
  1542                           	bsf	status, 5	;RP0=1, select bank3
  1543  05E0  1683               	bsf	status, 6	;RP1=1, select bank3
  1544  05E1  1703               	clrf	(393)^0180h	;volatile
  1545  05E2  0189               	line	25
  1546                           	
  1547                           l732:	
  1548  05E3                     ;teclado.c: 25:     TRISB = 0xF0;
  1549                           	movlw	low(0F0h)
  1550  05E3  30F0               	bsf	status, 5	;RP0=1, select bank1
  1551  05E4  1683               	bcf	status, 6	;RP1=0, select bank1
  1552  05E5  1303               	movwf	(134)^080h	;volatile
  1553  05E6  0086               	line	26
  1554                           	
  1555                           l734:	
  1556  05E7                     ;teclado.c: 26:     PORTB = 0;
  1557                           	bcf	status, 5	;RP0=0, select bank0
  1558  05E7  1283               	bcf	status, 6	;RP1=0, select bank0
  1559  05E8  1303               	clrf	(6)	;volatile
  1560  05E9  0186               	line	28
  1561                           	
  1562                           l81:	
  1563  05EA                     	return
  1564  05EA  0008               	opt stack 0
  1565                           GLOBAL	__end_of_teclado_init
  1566                           	__end_of_teclado_init:
  1567  05EB                     	signat	_teclado_init,89
  1568                           	global	_dispLCD_init
  1569                           
  1570 ;; *************** function _dispLCD_init *****************
  1571 ;; Defined at:
  1572 ;;		line 141 in file "DispLCD4vias.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    1
  1593 ;; This function calls:
  1594 ;;		_dispLCD_instReg
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1600                           	file	"DispLCD4vias.c"
  1601                           	line	141
  1602                           global __ptext3
  1603                           __ptext3:	;psect for function _dispLCD_init
  1604  0630                     psect	text3
  1605                           	file	"DispLCD4vias.c"
  1606                           	line	141
  1607                           	global	__size_of_dispLCD_init
  1608                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  1609  0024                     	
  1610                           _dispLCD_init:	
  1611  0630                     ;incstack = 0
  1612                           	opt	stack 6
  1613                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  1614                           	line	143
  1615                           	
  1616                           l726:	
  1617  0630                     ;DispLCD4vias.c: 143:     TRISDbits.TRISD2 = 0;
  1618                           	bsf	status, 5	;RP0=1, select bank1
  1619  0630  1683               	bcf	status, 6	;RP1=0, select bank1
  1620  0631  1303               	bcf	(136)^080h,2	;volatile
  1621  0632  1108               	line	144
  1622                           ;DispLCD4vias.c: 144:     TRISDbits.TRISD3 = 0;
  1623                           	bcf	(136)^080h,3	;volatile
  1624  0633  1188               	line	146
  1625                           ;DispLCD4vias.c: 146:     TRISDbits.TRISD4 = 0;
  1626                           	bcf	(136)^080h,4	;volatile
  1627  0634  1208               	line	147
  1628                           ;DispLCD4vias.c: 147:     TRISDbits.TRISD5 = 0;
  1629                           	bcf	(136)^080h,5	;volatile
  1630  0635  1288               	line	148
  1631                           ;DispLCD4vias.c: 148:     TRISDbits.TRISD6 = 0;
  1632                           	bcf	(136)^080h,6	;volatile
  1633  0636  1308               	line	149
  1634                           ;DispLCD4vias.c: 149:     TRISDbits.TRISD7 = 0;
  1635                           	bcf	(136)^080h,7	;volatile
  1636  0637  1388               	line	151
  1637                           ;DispLCD4vias.c: 151:     LCDbits.EN = 1;
  1638                           	bcf	status, 5	;RP0=0, select bank0
  1639  0638  1283               	bcf	status, 6	;RP1=0, select bank0
  1640  0639  1303               	bsf	(8),3	;volatile
  1641  063A  1588               	line	152
  1642                           	
  1643                           l728:	
  1644  063B                     ;DispLCD4vias.c: 152:     dispLCD_instReg( 0x20|0x00|0x08);
  1645                           	movlw	low(028h)
  1646  063B  3028               	fcall	_dispLCD_instReg
  1647  063C  120A  118A  276E  120A  118A  	line	153
  1648                           ;DispLCD4vias.c: 153:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  1649                           	movlw	low(0Ch)
  1650  0641  300C               	fcall	_dispLCD_instReg
  1651  0642  120A  118A  276E  120A  118A  	line	154
  1652                           ;DispLCD4vias.c: 154:     dispLCD_instReg( 0x01 );
  1653                           	movlw	low(01h)
  1654  0647  3001               	fcall	_dispLCD_instReg
  1655  0648  120A  118A  276E  120A  118A  	line	155
  1656                           ;DispLCD4vias.c: 155:     dispLCD_instReg( 0x02 );
  1657                           	movlw	low(02h)
  1658  064D  3002               	fcall	_dispLCD_instReg
  1659  064E  120A  118A  276E  120A  118A  	line	156
  1660                           	
  1661                           l46:	
  1662  0653                     	return
  1663  0653  0008               	opt stack 0
  1664                           GLOBAL	__end_of_dispLCD_init
  1665                           	__end_of_dispLCD_init:
  1666  0654                     	signat	_dispLCD_init,89
  1667                           	global	_dispLCD
  1668                           
  1669 ;; *************** function _dispLCD *****************
  1670 ;; Defined at:
  1671 ;;		line 159 in file "DispLCD4vias.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  lin             1    wreg     unsigned char 
  1674 ;;  col             1    6[COMMON] unsigned char 
  1675 ;;  str             2    7[COMMON] PTR const unsigned char 
  1676 ;;		 -> STR_1(15), main@str(15), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  lin             1   11[COMMON] unsigned char 
  1679 ;;  pos             1   10[COMMON] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         3       0       0       0       0
  1690 ;;      Locals:         2       0       0       0       0
  1691 ;;      Temps:          1       0       0       0       0
  1692 ;;      Totals:         6       0       0       0       0
  1693 ;;Total ram usage:        6 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    2
  1696 ;; This function calls:
  1697 ;;		_dispLCD_dataReg
  1698 ;;		_dispLCD_lincol
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1704                           	line	159
  1705                           global __ptext4
  1706                           __ptext4:	;psect for function _dispLCD
  1707  0683                     psect	text4
  1708                           	file	"DispLCD4vias.c"
  1709                           	line	159
  1710                           	global	__size_of_dispLCD
  1711                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  1712  003B                     	
  1713                           _dispLCD:	
  1714  0683                     ;incstack = 0
  1715                           	opt	stack 5
  1716                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1717                           ;dispLCD@lin stored from wreg
  1718                           	movwf	(dispLCD@lin)
  1719  0683  00FB               	line	161
  1720                           	
  1721                           l838:	
  1722  0684                     ;DispLCD4vias.c: 159: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );DispLCD4vias.c: 160: {;DispLCD4vias.c: 161:     char pos = col;
  1723                           	movf	(dispLCD@col),w
  1724  0684  0876               	movwf	(??_dispLCD+0)+0
  1725  0685  00F9               	movf	(??_dispLCD+0)+0,w
  1726  0686  0879               	movwf	(dispLCD@pos)
  1727  0687  00FA               	line	162
  1728                           	
  1729                           l840:	
  1730  0688                     ;DispLCD4vias.c: 162:     dispLCD_lincol( lin, col );
  1731                           	movf	(dispLCD@col),w
  1732  0688  0876               	movwf	(??_dispLCD+0)+0
  1733  0689  00F9               	movf	(??_dispLCD+0)+0,w
  1734  068A  0879               	movwf	(dispLCD_lincol@col)
  1735  068B  00F3               	movf	(dispLCD@lin),w
  1736  068C  087B               	fcall	_dispLCD_lincol
  1737  068D  120A  118A  25EB  120A  118A  	line	164
  1738                           ;DispLCD4vias.c: 164:     while( *str )
  1739                           	goto	l848
  1740  0692  2EAC               	
  1741                           l50:	
  1742  0693                     	line	166
  1743                           	
  1744                           l842:	
  1745  0693                     ;DispLCD4vias.c: 165:     {;DispLCD4vias.c: 166:         dispLCD_dataReg( *str );
  1746                           	movf	(dispLCD@str+1),w
  1747  0693  0878               	bcf	status, 5	;RP0=0, select bank0
  1748  0694  1283               	bcf	status, 6	;RP1=0, select bank0
  1749  0695  1303               	movwf	btemp+1
  1750  0696  00FF               	movf	(dispLCD@str),w
  1751  0697  0877               	movwf	fsr0
  1752  0698  0084               	fcall	stringtab
  1753  0699  120A  118A  2003  120A  118A  	fcall	_dispLCD_dataReg
  1754  069E  120A  118A  2654  120A  118A  	line	167
  1755                           	
  1756                           l844:	
  1757  06A3                     ;DispLCD4vias.c: 167:         ++str;
  1758                           	movlw	01h
  1759  06A3  3001               	addwf	(dispLCD@str),f
  1760  06A4  07F7               	skipnc
  1761  06A5  1803               	incf	(dispLCD@str+1),f
  1762  06A6  0AF8               	line	168
  1763                           	
  1764                           l846:	
  1765  06A7                     ;DispLCD4vias.c: 168:         ++pos;
  1766                           	movlw	low(01h)
  1767  06A7  3001               	movwf	(??_dispLCD+0)+0
  1768  06A8  00F9               	movf	(??_dispLCD+0)+0,w
  1769  06A9  0879               	addwf	(dispLCD@pos),f
  1770  06AA  07FA               	goto	l848
  1771  06AB  2EAC               	line	169
  1772                           ;DispLCD4vias.c: 169:     }
  1773                           	
  1774                           l49:	
  1775  06AC                     	line	164
  1776                           	
  1777                           l848:	
  1778  06AC                     ;DispLCD4vias.c: 164:     while( *str )
  1779                           	movf	(dispLCD@str+1),w
  1780  06AC  0878               	bcf	status, 5	;RP0=0, select bank0
  1781  06AD  1283               	bcf	status, 6	;RP1=0, select bank0
  1782  06AE  1303               	movwf	btemp+1
  1783  06AF  00FF               	movf	(dispLCD@str),w
  1784  06B0  0877               	movwf	fsr0
  1785  06B1  0084               	fcall	stringtab
  1786  06B2  120A  118A  2003  120A  118A  	xorlw	0
  1787  06B7  3A00               	skipz
  1788  06B8  1D03               	goto	u311
  1789  06B9  2EBB               	goto	u310
  1790  06BA  2EBC               u311:
  1791  06BB                     	goto	l842
  1792  06BB  2E93               u310:
  1793  06BC                     	goto	l52
  1794  06BC  2EBD               	
  1795                           l51:	
  1796  06BD                     	line	170
  1797                           	
  1798                           l52:	
  1799  06BD                     	return
  1800  06BD  0008               	opt stack 0
  1801                           GLOBAL	__end_of_dispLCD
  1802                           	__end_of_dispLCD:
  1803  06BE                     	signat	_dispLCD,12409
  1804                           	global	_dispLCD_lincol
  1805                           
  1806 ;; *************** function _dispLCD_lincol *****************
  1807 ;; Defined at:
  1808 ;;		line 135 in file "DispLCD4vias.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;  lin             1    wreg     unsigned char 
  1811 ;;  col             1    3[COMMON] unsigned char 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  lin             1    5[COMMON] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         1       0       0       0       0
  1824 ;;      Locals:         1       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0
  1826 ;;      Totals:         3       0       0       0       0
  1827 ;;Total ram usage:        3 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    1
  1830 ;; This function calls:
  1831 ;;		_dispLCD_instReg
  1832 ;; This function is called by:
  1833 ;;		_dispLCD
  1834 ;;		_dispLCD_num
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1838                           	line	135
  1839                           global __ptext5
  1840                           __ptext5:	;psect for function _dispLCD_lincol
  1841  05EB                     psect	text5
  1842                           	file	"DispLCD4vias.c"
  1843                           	line	135
  1844                           	global	__size_of_dispLCD_lincol
  1845                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  1846  0013                     	
  1847                           _dispLCD_lincol:	
  1848  05EB                     ;incstack = 0
  1849                           	opt	stack 5
  1850                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  1851                           ;dispLCD_lincol@lin stored from wreg
  1852                           	movwf	(dispLCD_lincol@lin)
  1853  05EB  00F5               	line	137
  1854                           	
  1855                           l836:	
  1856  05EC                     ;DispLCD4vias.c: 135: void dispLCD_lincol( unsigned char lin, unsigned char col);DispLCD
                                 4vias.c: 136: {;DispLCD4vias.c: 137:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0
                                 x00) & 0x7F)) );
  1857                           	movf	(dispLCD_lincol@lin),w
  1858  05EC  0875               	movwf	(??_dispLCD_lincol+0)+0
  1859  05ED  00F4               	movlw	06h
  1860  05EE  3006               u305:
  1861  05EF                     	clrc
  1862  05EF  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  1863  05F0  0DF4               	addlw	-1
  1864  05F1  3EFF               	skipz
  1865  05F2  1D03               	goto	u305
  1866  05F3  2DEF               	movf	(dispLCD_lincol@col),w
  1867  05F4  0873               	addwf	0+(??_dispLCD_lincol+0)+0,w
  1868  05F5  0774               	andlw	07Fh
  1869  05F6  397F               	addlw	080h
  1870  05F7  3E80               	fcall	_dispLCD_instReg
  1871  05F8  120A  118A  276E  120A  118A  	line	138
  1872                           	
  1873                           l43:	
  1874  05FD                     	return
  1875  05FD  0008               	opt stack 0
  1876                           GLOBAL	__end_of_dispLCD_lincol
  1877                           	__end_of_dispLCD_lincol:
  1878  05FE                     	signat	_dispLCD_lincol,8313
  1879                           	global	_dispLCD_instReg
  1880                           
  1881 ;; *************** function _dispLCD_instReg *****************
  1882 ;; Defined at:
  1883 ;;		line 86 in file "DispLCD4vias.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  i               1    wreg     unsigned char 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  i               1    2[COMMON] unsigned char 
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         0       0       0       0       0
  1898 ;;      Locals:         1       0       0       0       0
  1899 ;;      Temps:          2       0       0       0       0
  1900 ;;      Totals:         3       0       0       0       0
  1901 ;;Total ram usage:        3 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_dispLCD_lincol
  1907 ;;		_dispLCD_init
  1908 ;;		_dispLCD_clr
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1912                           	line	86
  1913                           global __ptext6
  1914                           __ptext6:	;psect for function _dispLCD_instReg
  1915  076E                     psect	text6
  1916                           	file	"DispLCD4vias.c"
  1917                           	line	86
  1918                           	global	__size_of_dispLCD_instReg
  1919                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  1920  0080                     	
  1921                           _dispLCD_instReg:	
  1922  076E                     ;incstack = 0
  1923                           	opt	stack 6
  1924                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  1925                           ;dispLCD_instReg@i stored from wreg
  1926                           	movwf	(dispLCD_instReg@i)
  1927  076E  00F2               	line	88
  1928                           	
  1929                           l664:	
  1930  076F                     ;DispLCD4vias.c: 86: void dispLCD_instReg( unsigned char i );DispLCD4vias.c: 87: {;DispL
                                 CD4vias.c: 88:     LCDbits.RS = 0;
  1931                           	bcf	status, 5	;RP0=0, select bank0
  1932  076F  1283               	bcf	status, 6	;RP1=0, select bank0
  1933  0770  1303               	bcf	(8),2	;volatile
  1934  0771  1108               	line	89
  1935                           	
  1936                           l666:	
  1937  0772                     ;DispLCD4vias.c: 89:     LCDbits.BUS = (i>>4);
  1938                           	movf	(dispLCD_instReg@i),w
  1939  0772  0872               	movwf	(??_dispLCD_instReg+0)+0
  1940  0773  00F0               	movlw	04h
  1941  0774  3004               u15:
  1942  0775                     	clrc
  1943  0775  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  1944  0776  0CF0               	addlw	-1
  1945  0777  3EFF               	skipz
  1946  0778  1D03               	goto	u15
  1947  0779  2F75               	movf	0+(??_dispLCD_instReg+0)+0,w
  1948  077A  0870               	movwf	(??_dispLCD_instReg+1)+0
  1949  077B  00F1               	swapf	(??_dispLCD_instReg+1)+0,f
  1950  077C  0EF1               	movf	(8),w	;volatile
  1951  077D  0808               	xorwf	(??_dispLCD_instReg+1)+0,w
  1952  077E  0671               	andlw	not (((1<<4)-1)<<4)
  1953  077F  390F               	xorwf	(??_dispLCD_instReg+1)+0,w
  1954  0780  0671               	movwf	(8)	;volatile
  1955  0781  0088               	line	91
  1956                           	
  1957                           l668:	
  1958  0782                     ;DispLCD4vias.c: 91:     LCDbits.EN = 0;
  1959                           	bcf	(8),3	;volatile
  1960  0782  1188               	line	92
  1961                           ;DispLCD4vias.c: 92:     if( i == 0x01 || i == 0x02 )
  1962                           		decf	((dispLCD_instReg@i)),w
  1963  0783  0372               	btfsc	status,2
  1964  0784  1903               	goto	u21
  1965  0785  2F87               	goto	u20
  1966  0786  2F88               u21:
  1967  0787                     	goto	l672
  1968  0787  2F8F               u20:
  1969  0788                     	
  1970                           l670:	
  1971  0788                     		movlw	2
  1972  0788  3002               	xorwf	((dispLCD_instReg@i)),w
  1973  0789  0672               	btfss	status,2
  1974  078A  1D03               	goto	u31
  1975  078B  2F8D               	goto	u30
  1976  078C  2F8E               u31:
  1977  078D                     	goto	l674
  1978  078D  2F99               u30:
  1979  078E                     	goto	l672
  1980  078E  2F8F               	
  1981                           l30:	
  1982  078F                     	line	93
  1983                           	
  1984                           l672:	
  1985  078F                     ;DispLCD4vias.c: 93:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1986                           	opt asmopt_push
  1987                           opt asmopt_off
  1988                           movlw	3
  1989  078F  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  1990  0790  00F1               	movlw	151
  1991  0791  3097               movwf	((??_dispLCD_instReg+0)+0),f
  1992  0792  00F0               	u437:
  1993  0793                     decfsz	((??_dispLCD_instReg+0)+0),f
  1994  0793  0BF0               	goto	u437
  1995  0794  2F93               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  1996  0795  0BF1               	goto	u437
  1997  0796  2F93               	nop2
  1998  0797  2F98               opt asmopt_pop
  1999                           
  2000                           	goto	l676
  2001  0798  2F9E               	line	94
  2002                           ;DispLCD4vias.c: 94:     else
  2003                           	
  2004                           l28:	
  2005  0799                     	line	95
  2006                           	
  2007                           l674:	
  2008  0799                     ;DispLCD4vias.c: 95:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2009                           	opt asmopt_push
  2010                           opt asmopt_off
  2011                           	movlw	13
  2012  0799  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2013  079A  00F0               	u447:
  2014  079B                     decfsz	(??_dispLCD_instReg+0)+0,f
  2015  079B  0BF0               	goto	u447
  2016  079C  2F9B               opt asmopt_pop
  2017                           
  2018                           	goto	l676
  2019  079D  2F9E               	
  2020                           l31:	
  2021  079E                     	line	96
  2022                           	
  2023                           l676:	
  2024  079E                     ;DispLCD4vias.c: 96:     LCDbits.EN = 1;
  2025                           	bcf	status, 5	;RP0=0, select bank0
  2026  079E  1283               	bcf	status, 6	;RP1=0, select bank0
  2027  079F  1303               	bsf	(8),3	;volatile
  2028  07A0  1588               	line	99
  2029                           	
  2030                           l678:	
  2031  07A1                     ;DispLCD4vias.c: 99:     if( (i & 0xF0) == (0x20 | 0x00) )
  2032                           	movlw	low(0F0h)
  2033  07A1  30F0               	andwf	(dispLCD_instReg@i),w
  2034  07A2  0572               	movwf	(??_dispLCD_instReg+0)+0
  2035  07A3  00F0               		movlw	32
  2036  07A4  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  2037  07A5  0670               	btfss	status,2
  2038  07A6  1D03               	goto	u41
  2039  07A7  2FA9               	goto	u40
  2040  07A8  2FAA               u41:
  2041  07A9                     	goto	l690
  2042  07A9  2FC4               u40:
  2043  07AA                     	line	101
  2044                           	
  2045                           l680:	
  2046  07AA                     ;DispLCD4vias.c: 100:     {;DispLCD4vias.c: 101:         LCDbits.RS = 0;
  2047                           	bcf	(8),2	;volatile
  2048  07AA  1108               	line	102
  2049                           	
  2050                           l682:	
  2051  07AB                     ;DispLCD4vias.c: 102:         LCDbits.BUS = i>>4;
  2052                           	movf	(dispLCD_instReg@i),w
  2053  07AB  0872               	movwf	(??_dispLCD_instReg+0)+0
  2054  07AC  00F0               	movlw	04h
  2055  07AD  3004               u55:
  2056  07AE                     	clrc
  2057  07AE  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  2058  07AF  0CF0               	addlw	-1
  2059  07B0  3EFF               	skipz
  2060  07B1  1D03               	goto	u55
  2061  07B2  2FAE               	movf	0+(??_dispLCD_instReg+0)+0,w
  2062  07B3  0870               	movwf	(??_dispLCD_instReg+1)+0
  2063  07B4  00F1               	swapf	(??_dispLCD_instReg+1)+0,f
  2064  07B5  0EF1               	movf	(8),w	;volatile
  2065  07B6  0808               	xorwf	(??_dispLCD_instReg+1)+0,w
  2066  07B7  0671               	andlw	not (((1<<4)-1)<<4)
  2067  07B8  390F               	xorwf	(??_dispLCD_instReg+1)+0,w
  2068  07B9  0671               	movwf	(8)	;volatile
  2069  07BA  0088               	line	103
  2070                           	
  2071                           l684:	
  2072  07BB                     ;DispLCD4vias.c: 103:         LCDbits.EN = 0;
  2073                           	bcf	(8),3	;volatile
  2074  07BB  1188               	line	104
  2075                           	
  2076                           l686:	
  2077  07BC                     ;DispLCD4vias.c: 104:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2078                           	opt asmopt_push
  2079                           opt asmopt_off
  2080                           	movlw	13
  2081  07BC  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2082  07BD  00F0               	u457:
  2083  07BE                     decfsz	(??_dispLCD_instReg+0)+0,f
  2084  07BE  0BF0               	goto	u457
  2085  07BF  2FBE               opt asmopt_pop
  2086                           
  2087                           	line	105
  2088                           	
  2089                           l688:	
  2090  07C0                     ;DispLCD4vias.c: 105:         LCDbits.EN = 1;
  2091                           	bcf	status, 5	;RP0=0, select bank0
  2092  07C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2093  07C1  1303               	bsf	(8),3	;volatile
  2094  07C2  1588               	goto	l690
  2095  07C3  2FC4               	line	106
  2096                           ;DispLCD4vias.c: 106:     }
  2097                           	
  2098                           l32:	
  2099  07C4                     	line	108
  2100                           	
  2101                           l690:	
  2102  07C4                     ;DispLCD4vias.c: 108:     LCDbits.RS = 0;
  2103                           	bcf	(8),2	;volatile
  2104  07C4  1108               	line	109
  2105                           	
  2106                           l692:	
  2107  07C5                     ;DispLCD4vias.c: 109:     LCDbits.BUS = i & 0x0F;
  2108                           	movf	(dispLCD_instReg@i),w
  2109  07C5  0872               	andlw	0Fh
  2110  07C6  390F               	movwf	(??_dispLCD_instReg+0)+0
  2111  07C7  00F0               	swapf	(??_dispLCD_instReg+0)+0,f
  2112  07C8  0EF0               	movf	(8),w	;volatile
  2113  07C9  0808               	xorwf	(??_dispLCD_instReg+0)+0,w
  2114  07CA  0670               	andlw	not (((1<<4)-1)<<4)
  2115  07CB  390F               	xorwf	(??_dispLCD_instReg+0)+0,w
  2116  07CC  0670               	movwf	(8)	;volatile
  2117  07CD  0088               	line	110
  2118                           	
  2119                           l694:	
  2120  07CE                     ;DispLCD4vias.c: 110:     LCDbits.EN = 0;
  2121                           	bcf	(8),3	;volatile
  2122  07CE  1188               	line	111
  2123                           	
  2124                           l696:	
  2125  07CF                     ;DispLCD4vias.c: 111:     if( i == 0x01 || i == 0x02 )
  2126                           		decf	((dispLCD_instReg@i)),w
  2127  07CF  0372               	btfsc	status,2
  2128  07D0  1903               	goto	u61
  2129  07D1  2FD3               	goto	u60
  2130  07D2  2FD4               u61:
  2131  07D3                     	goto	l700
  2132  07D3  2FDB               u60:
  2133  07D4                     	
  2134                           l698:	
  2135  07D4                     		movlw	2
  2136  07D4  3002               	xorwf	((dispLCD_instReg@i)),w
  2137  07D5  0672               	btfss	status,2
  2138  07D6  1D03               	goto	u71
  2139  07D7  2FD9               	goto	u70
  2140  07D8  2FDA               u71:
  2141  07D9                     	goto	l702
  2142  07D9  2FE5               u70:
  2143  07DA                     	goto	l700
  2144  07DA  2FDB               	
  2145                           l35:	
  2146  07DB                     	line	112
  2147                           	
  2148                           l700:	
  2149  07DB                     ;DispLCD4vias.c: 112:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2150                           	opt asmopt_push
  2151                           opt asmopt_off
  2152                           movlw	3
  2153  07DB  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  2154  07DC  00F1               	movlw	151
  2155  07DD  3097               movwf	((??_dispLCD_instReg+0)+0),f
  2156  07DE  00F0               	u467:
  2157  07DF                     decfsz	((??_dispLCD_instReg+0)+0),f
  2158  07DF  0BF0               	goto	u467
  2159  07E0  2FDF               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  2160  07E1  0BF1               	goto	u467
  2161  07E2  2FDF               	nop2
  2162  07E3  2FE4               opt asmopt_pop
  2163                           
  2164                           	goto	l704
  2165  07E4  2FEA               	line	113
  2166                           ;DispLCD4vias.c: 113:     else
  2167                           	
  2168                           l33:	
  2169  07E5                     	line	114
  2170                           	
  2171                           l702:	
  2172  07E5                     ;DispLCD4vias.c: 114:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2173                           	opt asmopt_push
  2174                           opt asmopt_off
  2175                           	movlw	13
  2176  07E5  300D               movwf	((??_dispLCD_instReg+0)+0),f
  2177  07E6  00F0               	u477:
  2178  07E7                     decfsz	(??_dispLCD_instReg+0)+0,f
  2179  07E7  0BF0               	goto	u477
  2180  07E8  2FE7               opt asmopt_pop
  2181                           
  2182                           	goto	l704
  2183  07E9  2FEA               	
  2184                           l36:	
  2185  07EA                     	line	115
  2186                           	
  2187                           l704:	
  2188  07EA                     ;DispLCD4vias.c: 115:     LCDbits.EN = 1;
  2189                           	bcf	status, 5	;RP0=0, select bank0
  2190  07EA  1283               	bcf	status, 6	;RP1=0, select bank0
  2191  07EB  1303               	bsf	(8),3	;volatile
  2192  07EC  1588               	line	116
  2193                           	
  2194                           l37:	
  2195  07ED                     	return
  2196  07ED  0008               	opt stack 0
  2197                           GLOBAL	__end_of_dispLCD_instReg
  2198                           	__end_of_dispLCD_instReg:
  2199  07EE                     	signat	_dispLCD_instReg,4217
  2200                           	global	_dispLCD_dataReg
  2201                           
  2202 ;; *************** function _dispLCD_dataReg *****************
  2203 ;; Defined at:
  2204 ;;		line 119 in file "DispLCD4vias.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  d               1    wreg     unsigned char 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  d               1    2[COMMON] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      void 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         1       0       0       0       0
  2220 ;;      Temps:          2       0       0       0       0
  2221 ;;      Totals:         3       0       0       0       0
  2222 ;;Total ram usage:        3 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_dispLCD
  2228 ;;		_dispLCD_num
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2232                           	line	119
  2233                           global __ptext7
  2234                           __ptext7:	;psect for function _dispLCD_dataReg
  2235  0654                     psect	text7
  2236                           	file	"DispLCD4vias.c"
  2237                           	line	119
  2238                           	global	__size_of_dispLCD_dataReg
  2239                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  2240  002F                     	
  2241                           _dispLCD_dataReg:	
  2242  0654                     ;incstack = 0
  2243                           	opt	stack 6
  2244                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  2245                           ;dispLCD_dataReg@d stored from wreg
  2246                           	movwf	(dispLCD_dataReg@d)
  2247  0654  00F2               	line	121
  2248                           	
  2249                           l706:	
  2250  0655                     ;DispLCD4vias.c: 119: void dispLCD_dataReg( unsigned char d );DispLCD4vias.c: 120: {;Dis
                                 pLCD4vias.c: 121:     LCDbits.RS = 1;
  2251                           	bcf	status, 5	;RP0=0, select bank0
  2252  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  2253  0656  1303               	bsf	(8),2	;volatile
  2254  0657  1508               	line	122
  2255                           	
  2256                           l708:	
  2257  0658                     ;DispLCD4vias.c: 122:     LCDbits.BUS = d >> 4;
  2258                           	movf	(dispLCD_dataReg@d),w
  2259  0658  0872               	movwf	(??_dispLCD_dataReg+0)+0
  2260  0659  00F0               	movlw	04h
  2261  065A  3004               u85:
  2262  065B                     	clrc
  2263  065B  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  2264  065C  0CF0               	addlw	-1
  2265  065D  3EFF               	skipz
  2266  065E  1D03               	goto	u85
  2267  065F  2E5B               	movf	0+(??_dispLCD_dataReg+0)+0,w
  2268  0660  0870               	movwf	(??_dispLCD_dataReg+1)+0
  2269  0661  00F1               	swapf	(??_dispLCD_dataReg+1)+0,f
  2270  0662  0EF1               	movf	(8),w	;volatile
  2271  0663  0808               	xorwf	(??_dispLCD_dataReg+1)+0,w
  2272  0664  0671               	andlw	not (((1<<4)-1)<<4)
  2273  0665  390F               	xorwf	(??_dispLCD_dataReg+1)+0,w
  2274  0666  0671               	movwf	(8)	;volatile
  2275  0667  0088               	line	123
  2276                           	
  2277                           l710:	
  2278  0668                     ;DispLCD4vias.c: 123:     LCDbits.EN = 0;
  2279                           	bcf	(8),3	;volatile
  2280  0668  1188               	line	124
  2281                           	
  2282                           l712:	
  2283  0669                     ;DispLCD4vias.c: 124:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2284                           	opt asmopt_push
  2285                           opt asmopt_off
  2286                           	movlw	13
  2287  0669  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  2288  066A  00F0               	u487:
  2289  066B                     decfsz	(??_dispLCD_dataReg+0)+0,f
  2290  066B  0BF0               	goto	u487
  2291  066C  2E6B               opt asmopt_pop
  2292                           
  2293                           	line	125
  2294                           	
  2295                           l714:	
  2296  066D                     ;DispLCD4vias.c: 125:     LCDbits.EN = 1;
  2297                           	bcf	status, 5	;RP0=0, select bank0
  2298  066D  1283               	bcf	status, 6	;RP1=0, select bank0
  2299  066E  1303               	bsf	(8),3	;volatile
  2300  066F  1588               	line	127
  2301                           	
  2302                           l716:	
  2303  0670                     ;DispLCD4vias.c: 127:     LCDbits.RS = 1;
  2304                           	bsf	(8),2	;volatile
  2305  0670  1508               	line	128
  2306                           	
  2307                           l718:	
  2308  0671                     ;DispLCD4vias.c: 128:     LCDbits.BUS = d & 0x0F;
  2309                           	movf	(dispLCD_dataReg@d),w
  2310  0671  0872               	andlw	0Fh
  2311  0672  390F               	movwf	(??_dispLCD_dataReg+0)+0
  2312  0673  00F0               	swapf	(??_dispLCD_dataReg+0)+0,f
  2313  0674  0EF0               	movf	(8),w	;volatile
  2314  0675  0808               	xorwf	(??_dispLCD_dataReg+0)+0,w
  2315  0676  0670               	andlw	not (((1<<4)-1)<<4)
  2316  0677  390F               	xorwf	(??_dispLCD_dataReg+0)+0,w
  2317  0678  0670               	movwf	(8)	;volatile
  2318  0679  0088               	line	129
  2319                           	
  2320                           l720:	
  2321  067A                     ;DispLCD4vias.c: 129:     LCDbits.EN = 0;
  2322                           	bcf	(8),3	;volatile
  2323  067A  1188               	line	130
  2324                           ;DispLCD4vias.c: 130:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2325                           	opt asmopt_push
  2326                           opt asmopt_off
  2327                           	movlw	13
  2328  067B  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  2329  067C  00F0               	u497:
  2330  067D                     decfsz	(??_dispLCD_dataReg+0)+0,f
  2331  067D  0BF0               	goto	u497
  2332  067E  2E7D               opt asmopt_pop
  2333                           
  2334                           	line	131
  2335                           	
  2336                           l722:	
  2337  067F                     ;DispLCD4vias.c: 131:     LCDbits.EN = 1;
  2338                           	bcf	status, 5	;RP0=0, select bank0
  2339  067F  1283               	bcf	status, 6	;RP1=0, select bank0
  2340  0680  1303               	bsf	(8),3	;volatile
  2341  0681  1588               	line	132
  2342                           	
  2343                           l40:	
  2344  0682                     	return
  2345  0682  0008               	opt stack 0
  2346                           GLOBAL	__end_of_dispLCD_dataReg
  2347                           	__end_of_dispLCD_dataReg:
  2348  0683                     	signat	_dispLCD_dataReg,4217
  2349                           global	___latbits
  2350                           ___latbits	equ	2
  2351  0002                     	global	btemp
  2352                           	btemp set 07Eh
  2353  007E                     
  2354                           	DABS	1,126,2	;btemp
  2355                           	global	wtemp0
  2356                           	wtemp0 set btemp+0
  2357  007E                     	end


Data Sizes:
    Strings     15
    Constant    0
    Data        31
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     19      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), main@str(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_dispLCD
    _dispLCD_init->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    1114
                                              0 BANK0     19    19      0
                            _dispLCD
                       _dispLCD_init
                       _teclado_init
                       _teclado_scan
 ---------------------------------------------------------------------------------
 (1) _teclado_scan                                         7     7      0     135
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     120
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              6     3      3     763
                                              6 COMMON     6     3      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     316
                                              3 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _dispLCD_instReg                                      3     3      0     120
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _dispLCD
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_init
     _dispLCD_instReg
   _teclado_init
   _teclado_scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      32       5       62.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri May 14 14:10:33 2021

                       pc 0002               __CFG_CP$OFF 0000                        l30 078F  
                      l31 079E                        l15 06E0                        l40 0682  
                      l32 07C4                        l16 06F4                        l33 07E5  
                      l17 070C                        l50 0693                        l18 070D  
                      l35 07DB                        l43 05FD                        l51 06BD  
                      l19 070D                        l36 07EA                        l28 0799  
                      l52 06BD                        l37 07ED                        l46 0653  
                      l49 06AC                        l81 05EA                        l90 0755  
                      l91 076D                        l86 071A                        l87 076B  
                      l88 0730                        l89 0760                        u20 0788  
                      u21 0787                        u30 078E                        u31 078D  
                      u15 0775                        u40 07AA                        u41 07A9  
                      u60 07D4                        u61 07D3                        u70 07DA  
                      u71 07D9                        u55 07AE                        u85 065B  
 __end_of_dispLCD_dataReg 0683                        fsr 0004                       l700 07DB  
                     l710 0668                       l702 07E5                       l720 067A  
                     l712 0669                       l704 07EA                       l722 067F  
                     l714 066D                       l706 0655                       l730 05E0  
                     l716 0670                       l708 0658                       l732 05E3  
                     l740 0719                       l718 0671                       l670 0788  
                     l726 0630                       l734 05E7                       l750 0730  
                     l742 071A                       l680 07AA                       l672 078F  
                     l664 076F                       l840 0688                       l728 063B  
                     l760 0764                       l752 073F                       l744 0727  
                     l736 0710                       l682 07AB                       l690 07C4  
                     l674 0799                       l666 0772                       l842 0693  
                     l754 0755                       l746 0728                       l762 076B  
                     l738 0712                       l850 06BE                       l692 07C5  
                     l684 07BB                       l676 079E                       l668 0782  
                     l836 05EC                       l844 06A3                       l764 076D  
                     l756 0759                       l748 072F                       l860 06EF  
                     l852 06D5                       l694 07CE                       l686 07BC  
                     l678 07A1                       l846 06A7                       l838 0684  
                     l758 0760                       l862 06F4                       l854 06DA  
                     l696 07CF                       l688 07C0                       l848 06AC  
                     l864 06FF                       l856 06E0                       l698 07D4  
                     l858 06EA                       u100 0718                       u101 0717  
                     u120 072E                       u121 072D                       u114 0720  
                     u115 071E                       u140 073F                       u141 073E  
                     u310 06BC                       u134 0736                       u311 06BB  
                     u135 0734                       u160 075F                       u320 06C8  
                     u305 05EF                       u161 075E                       u170 076A  
                     u330 06EF                       u171 0769                       u155 0742  
                     u331 06EE              __CFG_CPD$OFF 0000                       u437 0793  
                     u447 079B                       u457 07BE                       u467 07DF  
                     u477 07E7                       u487 066B                       u497 067D  
                     fsr0 0004                       indf 0000   __end_of_dispLCD_instReg 07EE  
            __CFG_LVP$OFF 0000                      STR_1 0013              __CFG_WRT$OFF 0000  
                    _main 06BE                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PORTB 0006                     _TRISB 0086           __end_of_dispLCD 06BE  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E      __end_of_dispLCD_init 0654  
          __CFG_MCLRE$OFF 0000           __initialization 07EE              __end_of_main 0710  
        ?_dispLCD_dataReg 0070                    ??_main 003F          ?_dispLCD_instReg 0070  
                  _ANSELH 0189            __CFG_PWRTE$OFF 0000                    _tabela 0020  
               ??_dispLCD 0079   __end_of__initialization 07FC   __size_of_dispLCD_lincol 0013  
          __pcstackCOMMON 0070              __pidataBANK0 0611     __size_of_dispLCD_init 0024  
           ?_teclado_init 0070             ?_teclado_scan 0070                __pmaintext 06BE  
                 _LCDbits 0008              _dispLCD_init 0630                __stringtab 0003  
          ??_teclado_init 0070            ??_teclado_scan 0070                   _dispLCD 0683  
                 __ptext1 0710                   __ptext2 05E0                   __ptext3 0630  
                 __ptext4 0683                   __ptext5 05EB                   __ptext6 076E  
                 __ptext7 0654                   main@str 0043      end_of_initialization 07FC  
          _dispLCD_lincol 05EB                dispLCD@col 0076                dispLCD@lin 007B  
              dispLCD@pos 007A                dispLCD@str 0077                 _TRISDbits 0088  
__size_of_dispLCD_dataReg 002F    __end_of_dispLCD_lincol 05FE  __size_of_dispLCD_instReg 0080  
    __end_of_teclado_init 05EB      __end_of_teclado_scan 076E       start_initialization 07EE  
         ?_dispLCD_lincol 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000         dispLCD_lincol@col 0073  
       dispLCD_lincol@lin 0075                init_fetch0 05FE               __pdataBANK0 0020  
               ___latbits 0002             __pcstackBANK0 003F         ??_dispLCD_dataReg 0070  
       ??_dispLCD_instReg 0070           teclado_scan@col 0075           teclado_scan@lin 0076  
                ?_dispLCD 0076                 __pstrings 0003         teclado_scan@tecla 0074  
   __size_of_teclado_init 000B                 main@F1287 0030     __size_of_teclado_scan 005E  
        dispLCD_dataReg@d 0072               __stringbase 0012              _teclado_init 05E0  
            _teclado_scan 0710          dispLCD_instReg@i 0072        __end_of__stringtab 0013  
        __size_of_dispLCD 003B          ??_dispLCD_lincol 0074         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0052             ?_dispLCD_init 0070           _dispLCD_dataReg 0654  
                init_ram0 0602           _dispLCD_instReg 076E                 stringcode 000D  
          ??_dispLCD_init 0073                  stringdir 000D                  stringtab 0003  
